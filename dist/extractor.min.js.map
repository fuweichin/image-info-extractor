{"version":3,"file":"extractor.min.js.map","sources":["../src/commons.js","../src/jpeg-reader.js","../src/png-reader.js","../src/webp-reader.js","../src/avif-reader.js","../src/svg-reader.js","../src/exif-tags.js","../src/exif-parser.js","../src/xmp-tags.js","../src/xmp-parser.js","../src/icc-tags.js","../src/icc-parser.js","../src/iptc-tags.js","../src/iptc-parser.js","../src/exif-helpers.js","../src/xmp-helpers.js","../src/extractor.js","../src/jfif-parser.js"],"sourcesContent":["export const utf8Encoder = new TextEncoder('utf-8');\nexport const utf8Decoder = new TextDecoder('utf-8');\nexport const binaryDecoder = new TextDecoder('iso-8859-1');\nexport const utf16beDecoder = new TextDecoder('utf-16be');\n\n/**\n * @param {ArrayLike} array\n * @param {ArrayLike} search\n * @param {number} [position]\n * @returns {boolean}\n */\nexport function startsWithArray(array, search, position = 0) {\n  let end = position + search.length;\n  if (end > array.length) {\n    return false;\n  }\n  for (let i = position, j = 0; i < end; i++, j++) {\n    if (array[i] !== search[j]) {\n      return false;\n    }\n  }\n  return true;\n}\n/**\n * @param {ArrayLike} array \n * @param {ArrayLike} search\n * @param {number} [position]\n * @returns {boolean}\n */\nexport function indexOfArray(array, search, start = 0) {\n  if (start < 0) {\n    throw new Error('Parameter start cannot be negative');\n  }\n  let end = start + search.length;\n  if (end > array.length) {\n    return -1;\n  }\n  if (search.length === 0) {\n    return start;\n  }\n  let search0 = search[0];\n  searchLeading: for (let i = start; i < end; i++) {\n    if (array[i] === search0) {\n      for (let j = i + 1, k = 1; k < search.length; j++, k++) {\n        if (array[j] !== search[k]) {\n          continue searchLeading;\n        }\n      }\n      return i;\n    }\n  }\n  return -1;\n}\n/**\n * @param {Array} array \n * @param  {string} field\n * @returns {Object}\n */\nexport function indexBy(arr, field) {\n  let map = {};\n  for (let i = 0, e; i < arr.length; i++) {\n    e = arr[i];\n    map[e[field]] = e;\n  }\n  return map;\n}\n/**\n * @param {Uint8Array} arr\n * @returns {string}\n */\nexport function toHexString(arr) {\n  let str = '';\n  for (let i = 0; i < arr.length; i++) {\n    let s = arr[i].toString(16);\n    if (s.length === 1)\n      str += '0';\n    str += s;\n  }\n  return str;\n}\n/**\n * @param {string} hex\n * @returns {Uint8Array}\n */\nexport function fromHexString(str) {\n  let len = str.length / 2;\n  let arr = new Uint8Array(len);\n  for (let i = 0, j = 0; i < len; i++, j += 2) {\n    arr[i] = parseInt(str.slice(j, j + 2), 16);\n  }\n  return arr;\n}\n/**\n * @param {string} str \n * @returns {string}\n */\nexport function basename(str, ext) {\n  let pos = str.lastIndexOf('/');\n  let name = pos < 0 ? str : str.slice(pos + 1);\n  if (typeof ext === 'string' && ext.length > 0) {\n    if (name.endsWith(ext)) {\n      return name.slice(0, -ext.length);\n    }\n  }\n  return name;\n}\n/**\n * @param {string} str \n * @returns {string}\n */\nexport function extname(str) {\n  let pos = str.lastIndexOf('.');\n  return pos <= 0 ? '' : str.slice(pos);\n}\n/**\n * @async\n * @param {Array<Uint8Array>} chunks\n * @param {string} format 'gzip', 'deflate', or 'deflate-raw'\n * @returns {Array<Uint8Array>}\n */\nexport async function decompress(chunks, format) {\n  let writableSink = new BufferedWritableSink();\n  await new ReadableStream(new BufferedReadableSink(chunks)).\n    pipeThrough(new DecompressionStream(format)).\n    pipeTo(new WritableStream(writableSink));\n  return writableSink.chunks;\n}\nexport async function compress(chunks, format) {\n  let writableSink = new BufferedWritableSink();\n  await new ReadableStream(new BufferedReadableSink(chunks)).\n    pipeThrough(new CompressionStream(format)).\n    pipeTo(new WritableStream(writableSink));\n  return writableSink.chunks;\n}\n/**\n * @param {Uint8Array} array \n * @param  {Uint8Array} ...sources\n * @returns {Uint8Array}\n */\nexport function concatArrays(sources) {\n  let total = 0;\n  for (let source of sources) {\n    if (!(source instanceof Uint8Array)) {\n      throw new Error('Unexpected source type: ' + Object.prototype.toString.call(source).slice(8, -1));\n    }\n    total += source.length;\n  }\n  let arr = new Uint8Array(total);\n  let offset = 0;\n  for (let source of sources) {\n    arr.set(source, offset);\n    offset += source.length;\n  }\n  return arr;\n}\nclass BufferedReadableSink {\n  constructor(chunks) {\n    if (!Array.isArray(chunks)) {\n      throw new Error('parameter chunks should be an Array');\n    }\n    this.iterator = chunks[Symbol.iterator]();\n  }\n  pull(controller) {\n    let {done, value} = this.iterator.next();\n    if (done) {\n      controller.close();\n    } else {\n      controller.enqueue(value);\n    }\n  }\n}\nclass BufferedWritableSink {\n  chunks;\n  byteWritten;\n  constructor() {\n    this.chunks = [];\n    this.byteWritten = 0;\n  }\n  write(chunk) {\n    this.chunks.push(chunk);\n    this.byteWritten += chunk.length;\n  }\n}\n","/**\n * JPEG reader\n * based on https://github.com/titarenko/fast-exif\n */\nimport {startsWithArray, utf8Encoder, binaryDecoder, concatArrays} from './commons.js';\n\nconst CHUNK_SIZE = 65536;\nconst jfifIdentifier = utf8Encoder.encode('JFIF\\x00');\nconst jfxxIdentifier = utf8Encoder.encode('JFXX\\x00');\nconst exifIdentifier = utf8Encoder.encode('Exif\\x00\\x00');\nconst xmpIdentifier = utf8Encoder.encode('http://ns.adobe.com/xap/1.0/\\x00');\nconst exmpIdentifier = utf8Encoder.encode('http://ns.adobe.com/xmp/extension/\\x00');\nconst iccIdentifier = utf8Encoder.encode('ICC_PROFILE\\x00');\nconst iptcIdentifier = utf8Encoder.encode('Photoshop 3.0\\x00');\nconst mjpgIdentifier = utf8Encoder.encode('mjpg');\n\nconst SOF = [0xFFC0, 0xFFC1, 0xFFC2, 0xFFC3, 0xFFC5, 0xFFC6, 0xFFC7, 0xFFC9, 0xFFCA, 0xFFCB, 0xFFCD, 0xFFCE, 0xFFCF,\n  0xFFF7];\nconst progressiveMarkers = [0xFFC2, 0xFFC5, 0xFFCA, 0xFFCE];\nconst losslessMarkers = [0xFFC3, 0xFFC7, 0xFFCB, 0xFFCF];\n\n/**\n * @param {File} file\n * @returns {Object}\n * @async\n */\nexport async function readFile(file) {\n  let result = {};\n  let info = {alpha: false, lossless: false, progressive: false, animation: false};\n  let flags = 0;\n  let obj = {[Symbol.asyncIterator]() { return findJPEGSegments(file); }};\n  let exmpChunks = [];\n  let iccChunks = [];\n  for await (let seg of obj) {\n    let {marker, data: array} = seg;\n    if (marker === 0xFFE0) { // APP0\n      if (startsWithArray(array, jfifIdentifier)) { // JFIF\n        result.JFIF = {content: array.slice(jfifIdentifier.length).buffer};\n        flags |= 0b10000;\n      } else if (startsWithArray(array, jfxxIdentifier)) { // JFIF extension\n        result.JFXX = {content: array.slice(jfxxIdentifier.length).buffer};\n        flags |= 0b1000;\n      }\n    } else if (marker === 0xFFE1) { // APP1\n      if (startsWithArray(array, exifIdentifier)) { // EXIF\n        result.EXIF = {content: array.slice(exifIdentifier.length).buffer};\n        flags |= 0b100;\n      } else if (startsWithArray(array, xmpIdentifier)) { // XMP\n        result.XMP = {content: array.slice(xmpIdentifier.length).buffer};\n        flags |= 0b010;\n      } else if (startsWithArray(array, exmpIdentifier)) { // Extended XMP\n        exmpChunks.push(toExtendedXMPChunk(array, exmpIdentifier.length));\n      } else if (startsWithArray(array, mjpgIdentifier)) {\n        info.animation = true;\n      }\n    } else if (marker === 0xFFE2) { // APP2\n      if (startsWithArray(array, iccIdentifier)) { // ICC\n        iccChunks.push(toICCChunk(array, iccIdentifier.length));\n      }\n    } else if (marker === 0xFFED) { // APP13\n      if (startsWithArray(array, iptcIdentifier)) {\n        let iterable = {[Symbol.iterator]() { return findImageResourceBlocks(array, iptcIdentifier.length); }};\n        let iptcBlock = null;\n        seekIPTCBlock: for (let block of iterable) {\n          if (block.resId === 0x0404) { // IPTC\n            iptcBlock = block;\n            break seekIPTCBlock;\n          }\n        }\n        if (iptcBlock) {\n          result.IPTC = {content: iptcBlock.data.slice(0).buffer};\n        }\n      }\n    } else if (SOF.includes(marker)) { // SOFn\n      let view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n      info.bitDepth = view.getUint8(0);\n      info.width = view.getUint16(3);\n      let lines = view.getUint16(1);\n      if (lines === 0) {\n        // TODO see lines defined in 0xFFDC marker\n      } else {\n        info.height = lines;\n      }\n      if (progressiveMarkers.includes(marker)) {\n        info.progressive = true;\n      }\n      if (losslessMarkers.includes(marker)) {\n        info.lossless = true;\n      }\n      result.INFO = {parsed: info};\n    } else if (marker === 0xFFDA) { // SOS, EOI\n      \n      break;\n    } else if (marker === 0xFFD9) { // SOS, EOI\n      break;\n    }\n  }\n  if (exmpChunks.length > 0) { // merge ExtendedXMP chunks\n    let array = mergeExtendedXMPChunks(exmpChunks);\n    if (array) {\n      result.ExtendedXMP = {content: array.buffer};\n    }\n  }\n  if (iccChunks.length > 0) { // merge ICC chunks\n    let array = mergeICCChunks(iccChunks);\n    if (array) {\n      result.ICC = {content: array.buffer};\n      flags |= 0b1;\n    }\n  }\n  info.flags = flags;\n  return result;\n}\nfunction toExtendedXMPChunk(array, start) {\n  let view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n  let guid = binaryDecoder.decode(array.subarray(start, start + 32));\n  let fullLength = view.getUint32(start + 32);\n  let offset = view.getUint32(start + 36);\n  let content = array.subarray(start + 40);\n  return {content, guid, fullLength, offset};\n}\nfunction mergeExtendedXMPChunks(exmpChunks) {\n  let fullLength = exmpChunks[0].fullLength;\n  exmpChunks.sort((a, b) => Math.sign(a.offset - b.offset));\n  let array = new Uint8Array(fullLength);\n  let j = 0;\n  for (let i = 0; i < exmpChunks.length; i++) {\n    let {content, offset} = exmpChunks[i];\n    if (offset !== j) {\n      console.warn('ExtendedXMP chunk offset mismatch');\n      return null;\n    }\n    array.set(content, j);\n    j += content.length;\n  }\n  if (j !== fullLength) {\n    console.warn('ExtendedXMP full length mismatch');\n    return null;\n  }\n  return array;\n}\nfunction toICCChunk(array, start) {\n  return {\n    number: array[12],\n    total: array[13],\n    content: array.subarray(start + 2),\n  };\n}\nfunction mergeICCChunks(iccChunks) {\n  let expected = iccChunks[0].total;\n  let actual = iccChunks.length;\n  if (actual !== expected) {\n    console.warn('ICC chunk count mismatch');\n    return null;\n  }\n  iccChunks.sort((a, b) => Math.sign(a.number - b.number));\n  let totalLength = 0;\n  for (let chunk of iccChunks) {\n    totalLength += chunk.content.length;\n  }\n  let array = new Uint8Array(totalLength);\n  for (let i = 0, offset = 0; i < expected; i++) {\n    let content = iccChunks[i].content;\n    array.set(content, offset);\n    offset += content.length;\n  }\n  for (let chunk of iccChunks) {\n    totalLength += chunk.content.byteLength;\n  }\n  return array;\n}\n\nasync function* findJPEGSegments(file) {\n  let chunkSize = CHUNK_SIZE;\n  let fileSize = file.size;\n  let buffer = await file.slice(0, Math.min(chunkSize, fileSize)).arrayBuffer();\n  let fileOffset = buffer.byteLength;\n  if (buffer.byteLength < 4)\n    return null;\n  let array = new Uint8Array(buffer);\n  let view = new DataView(buffer);\n  let seg = readNextSegment(view, 0);\n  if (seg.marker !== 0xFFD8)\n    throw new Error('Unexpected start of file');\n  let arrayOffset = 2;\n  let ensureBufferSize = async (minSize) => {\n    if (array.length <= minSize) {\n      if (fileOffset >= fileSize)\n        return false;\n      let newBuffer = await file.slice(fileOffset, Math.min(fileOffset + chunkSize, fileSize)).arrayBuffer();\n      chunkSize = chunkSize < 2097152 ? chunkSize * 2 : chunkSize;\n      fileOffset += newBuffer.byteLength;\n      let newArray = concatArrays([array, new Uint8Array(newBuffer)]);\n      buffer = newArray.buffer;\n      array = newArray;\n      view = new DataView(buffer);\n    }\n    return true;\n  };\n  while (true) {\n    let ok = await ensureBufferSize(arrayOffset + 4);\n    if (!ok) {\n      break;\n    }\n    seg = readNextSegment(view, arrayOffset);\n    let {marker, length} = seg;\n    if (marker >= 0xFFC0 && marker <= 0xFFEF) {\n      let offset = arrayOffset + 4;\n      let dataLength = length - 2;\n      let data;\n      if (marker >= 0xFFD0 && marker <= 0xFFDA) {\n        data = new Uint8Array(0);\n      } else {\n        if (array.length <= offset + length) {\n          let ok = await ensureBufferSize(offset + length);\n          if (!ok) {\n            break;\n          }\n        }\n        data = array.subarray(offset, offset + dataLength);\n      }\n      yield {marker, data, start: offset, end: offset + length};\n    } else {\n      break;\n    }\n    arrayOffset += 2 + length;\n  }\n  return null;\n}\n\nlet readNextSegment = (view, start) => {\n  let marker = view.getUint16(start);\n  let b0 = marker >> 8;\n  if (b0 !== 0xFF)\n    throw new Error('Unexpected segment marker: 0x' + marker.toString(16).toUpperCase().padStart(4, '0'));\n  let b1 = marker & 0xFF;\n  let length;\n  if (b1 >= 0xD0 && b1 <= 0xD9) {\n    length = 0;\n  } else if (b1 === 0xDD) {\n    length = 4;\n  } else {\n    length = view.getUint16(start + 2);\n  }\n  return {marker, length};\n};\n\nfunction* findImageResourceBlocks(array, offset) {\n  const signature = '8BIM';\n  let view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n  let j = offset;\n  while (j < view.byteLength) {\n    let str = binaryDecoder.decode(new Uint8Array(view.buffer, view.byteOffset + j, 4));\n    if (str !== signature) {\n      throw new Error(`Expected IPTC signature \"${signature}\" but got \"${str}\"`);\n    }\n    let resId = view.getUint16(j + 4);\n    j += 6;\n    let nameLength = view.getUint8(j);\n    let name = binaryDecoder.decode(array.subarray(j + 1, j + 1 + nameLength));\n    let n = 1 + name.length;\n    if (n % 2 === 1) {\n      n += 1;\n    }\n    j += n;\n    let dataSize = view.getUint32(j);\n    j += 4;\n    let data = new Uint8Array(view.buffer, view.byteOffset + j, dataSize);\n    j += dataSize % 2 === 1 ? dataSize + 1 : dataSize;\n    yield {resId, name, data};\n  }\n}\n","import {binaryDecoder, startsWithArray, concatArrays, decompress} from './commons.js';\n\nconst pngMagicNumber = [0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A];\n\nexport async function readFile(file) {\n  let buffer = await file.arrayBuffer();\n  let array = new Uint8Array(buffer);\n  if (!startsWithArray(array, pngMagicNumber)) {\n    throw new Error('Not a PNG file');\n  }\n  let result = {};\n  let info = {};\n  let colorInfo = {};\n  let flags = 0;\n  let obj = {[Symbol.iterator]() { return findPNGChunks(buffer, pngMagicNumber.length); }};\n  findChunks: for (let chunk of obj) {\n    switch (chunk.type) {\n      case 'IHDR': {\n        let data = chunk.data;\n        let view = new DataView(data.buffer, data.byteOffset, data.byteLngeht);\n        info.width = view.getUint32(0);\n        info.height = view.getUint32(4);\n        info.bitDepth = view.getUint8(8);\n        info.alpha = (view.getUint8(9) & 0b100) > 0;\n        info.progressive = view.getUint8(12) === 1;\n        info.lossless = true;\n        info.animation = false;\n        result.INFO = {parsed: info};\n        break;\n      }\n      case 'eXIf':\n        result.EXIF = {content: chunk.data.slice().buffer};\n        flags |= 0b100;\n        break;\n      case 'iTXt': {\n        let {data} = chunk;\n        let {keyword, compressionFlag, compressionMethod, text} = readITXT(data);\n        if (keyword === 'XML:com.adobe.xmp') {\n          if (compressionFlag === 0) {\n            text = text.slice();\n          } else if (compressionMethod === 0) {\n            text = concatArrays((await decompress([text], 'deflate')).chunks);\n          } else {\n            break; // cannot read it\n          }\n          result.XMP = {content: text.buffer};\n          flags |= 0b10;\n        } else if (keyword === 'Creation Time') {\n          info.creationTime = new Date(binaryDecoder.decode(text)).getTime();\n        }\n        break;\n      }\n      case 'iCCP':\n      case 'iCCN': {\n        let g = findNullSeparatedStrings(array, chunk.start + 8);\n        let {done, value} = g.next();\n        if (done) {\n          break;\n        }\n        let {bytesRead, data: _profileName} = value;\n        let j = bytesRead;\n        let {data} = chunk;\n        let compressionMethod = data[j];\n        if (compressionMethod === 0) {\n          let chunks = await decompress([data.subarray(j + 1)], 'deflate');\n          result.ICC = {content: concatArrays(chunks).buffer};\n          flags |= 0b1;\n        }\n        break;\n      }\n      case 'sRGB': {\n        info.colorSpace = 'srgb';\n        info.renderingIntent = chunk.data[0];\n        break;\n      }\n      // HDR color information\n      case 'cICP': { // when present, ignore iCCP, sRGB, gAMA, cHRM\n        let view = toDataView(chunk.data);\n        colorInfo.colorPrimaries = view.getUint8(0);\n        colorInfo.transferFunction = view.getUint8(1);\n        colorInfo.matrixCoefficients = view.getUint8(2);\n        colorInfo.videoFullRangeFlag = view.getUint8(3);\n        break;\n      }\n      case 'cHRM': { // sRGB or iCCP chunk overrides cHRM+gAMA chunk\n        let view = toDataView(chunk.data);\n        colorInfo.whitePointX =  view.getUint32(0) / 100000;\n        colorInfo.whitePointY =  view.getUint32(4) / 100000;\n        colorInfo.redPrimaryX =  view.getUint32(8) / 100000;\n        colorInfo.redPrimaryY =  view.getUint32(12) / 100000;\n        colorInfo.greenPrimaryX = view.getUint32(16) / 100000;\n        colorInfo.greenPrimaryY = view.getUint32(20) / 100000;\n        colorInfo.bluePrimaryX =  view.getUint32(24) / 100000;\n        colorInfo.bluePrimaryY =  view.getUint32(28) / 100000;\n        break;\n      }\n      case 'gAMA': {\n        let view = toDataView(chunk.data);\n        colorInfo.gamma = 100000 / view.getUint32(0);\n        break;\n      }\n      case 'mDCv': {\n        let view = toDataView(chunk.data);\n        colorInfo.redPrimaryX =  view.getUint16(0) / 50000;\n        colorInfo.redPrimaryY =  view.getUint16(2) / 50000;\n        colorInfo.greenPrimaryX = view.getUint16(4) / 50000;\n        colorInfo.greenPrimaryY = view.getUint16(6) / 50000;\n        colorInfo.bluePrimaryX =  view.getUint16(8) / 50000;\n        colorInfo.bluePrimaryY =  view.getUint16(10) / 50000;\n        colorInfo.whitePointX =  view.getUint16(12) / 50000;\n        colorInfo.whitePointY =  view.getUint16(14) / 50000;\n        colorInfo.maximumLuminance = view.getUint32(16) / 10000;\n        colorInfo.minimumLuminance = view.getUint32(20) / 10000;\n        break;\n      }\n      case 'cLLi': {\n        let view = toDataView(chunk.data);\n        colorInfo.maxContentLightLevel =  view.getUint32(0) / 10000;\n        colorInfo.maxFrameAverageLightLevel =  view.getUint32(4) / 10000;\n        break;\n      }\n      case 'tIME': {\n        let view = toDataView(chunk.data);\n        let d = new Date(0);\n        d.setFullYear(view.getUint16(0));\n        d.setMonth(view.getUint8(2) - 1);\n        d.setDate(view.getUint8(3));\n        d.setHours(view.getUint8(4));\n        d.setMinutes(view.getUint8(5));\n        d.setSeconds(view.getUint8(6));\n        info.modificationTime = d.getTime();\n        break;\n      }\n      case 'acTL': {\n        info.animation = true;\n        break findChunks;\n      }\n      case 'IDAT':\n      case 'IEND':\n        break findChunks;\n    }\n  }\n  info.flags = flags;\n  return result;\n}\n\nfunction toDataView(array) {\n  return new DataView(array.buffer, array.byteOffset, array.byteLength);\n}\nasync function readITXT(data) {\n  let pos = data.indexOf(0);\n  let keyword = binaryDecoder.decode(data.subarray(0, pos));\n  let j = pos + 1;\n  let compressonFlag = data[j];\n  let compressonMethod = data[j + 1];\n  j += 2;\n  pos = data.indexOf(0, j);\n  let languageTag = binaryDecoder.decode(data.subarray(j, pos));\n  j = pos + 1;\n  pos = data.indexOf(0, j);\n  let translatedKeyword = binaryDecoder.decode(data.subarray(j, pos));\n  j = pos + 1;\n  let text = data.subarray(j);\n  return {\n    keyword,\n    compressonFlag,\n    compressonMethod,\n    languageTag,\n    translatedKeyword,\n    text\n  };\n}\n\nfunction* findPNGChunks(buffer, start) {\n  let view = new PNGDataView(buffer);\n  let offset = start;\n  while (offset < buffer.byteLength) {\n    let chunk = view.getChunk(offset);\n    yield chunk;\n    offset = chunk.end;\n    if (chunk.type === 'IDAT' || chunk.type === 'IEND') {\n      break;\n    }\n  }\n}\nfunction* findNullSeparatedStrings(view, offset = 0) {\n  let a = new Uint8Array(view.buffer, view.byteOffset + offset);\n  let start = 0;\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] === 0) {\n      yield {bytesRead: i + 1, data: binaryDecoder.decode(a.subarray(start, i))};\n      start = i + 1;\n    }\n  }\n}\nclass PNGDataView extends DataView {\n  getBinaryString(offset, length, strip = false) {\n    let a = new Uint8Array(super.buffer, super.byteOffset + offset, length);\n    if (strip) {\n      let lastIndex = a.length - 1;\n      while (lastIndex > -1) {\n        if (a[lastIndex] === 0) {\n          lastIndex--;\n        } else {\n          break;\n        }\n      }\n      return binaryDecoder.decode(a.subarray(0, lastIndex + 1));\n    }\n    return binaryDecoder.decode(a);\n  }\n  getChunk(offset) {\n    let j = offset;\n    let dataLength = super.getUint32(j);\n    j += 4;\n    let type = this.getBinaryString(j, 4);\n    j += 4;\n    let data = new Uint8Array(super.buffer, j, dataLength);\n    j += dataLength;\n    let crc = super.getUint32(j);\n    j += 4;\n    return {type, data, crc, start: offset, end: j};\n  }\n}\n","import {binaryDecoder} from './commons.js';\n\nexport async function readFile(file) {\n  let fileSize = file.size;\n  let buffer = await file.arrayBuffer();\n  let bytesRead = buffer.byteLength;\n  let view = new RIFFDataView(buffer);\n  if (bytesRead < 12) {\n    throw new Error('Not a WebP file');\n  }\n  let chunk = view.getChunk(0);\n  if (chunk.type !== 'RIFF' || view.getBinaryString(chunk.start + 8, 4) !== 'WEBP') {\n    throw new Error('Not a WebP file');\n  }\n  if (8 + chunk.size !== fileSize) {\n    throw new Error(`Expected file length to be ${8 + chunk.size} but got ${fileSize}`);\n  }\n  let result = {};\n  let info = {};\n  let flags = 0;\n  let features = 0;\n  findChunks: for (let offset = 12; offset < fileSize; offset = chunk.end) {\n    chunk = view.getChunk(offset);\n    switch (chunk.type) {\n      case 'VP8X': {\n        let start = offset + 8;\n        let b = view.getUint8(start); // |Rsv|I|L|E|X|A|R|\n        info.width = (view.getUint16(start + 4, true) & 0x3FFF) + 1;\n        info.height = (view.getUint16(start + 7, true) & 0x3FFF) + 1;\n        info.alpha = (b & 0b10000) > 0;\n        info.animation = (b & 0b10) > 0;\n        info.bitDepth = 8;\n        result.INFO = {parsed: info};\n        features = b & 0b101100;\n        break;\n      }\n      case 'VP8 ':\n      case 'VP8L':\n        info.lossless = chunk.type === 'VP8L';\n        if (features === 0) {\n          break findChunks;\n        }\n        break;\n      case 'EXIF': {\n        let start = offset + 8;\n        let content = new Uint8Array(buffer).slice(start, start + chunk.size).buffer;\n        result.EXIF = {content};\n        flags |= 0b100;\n        break;\n      }\n      case 'ICCP': {\n        let start = offset + 8;\n        let content = new Uint8Array(buffer).slice(start, start + chunk.size).buffer;\n        result.ICC = {content};\n        flags |= 0b010;\n        break;\n      }\n      case 'XMP ': {\n        let start = offset + 8;\n        let content = new Uint8Array(buffer).slice(start, start + chunk.size).buffer;\n        result.XMP = {content};\n        flags |= 0b001;\n        break;\n      }\n      default:\n        continue;\n    }\n    if (flags === 0b111) {\n      break;\n    }\n  }\n  info.flags = flags;\n  return flags === 0 ? undefined : result;\n}\n\nclass RIFFDataView extends DataView {\n  getBinaryString(offset, length, strip = false) {\n    let a = new Uint8Array(super.buffer, super.byteOffset + offset, length);\n    if (strip) {\n      let lastIndex = a.length - 1;\n      while (lastIndex > -1) {\n        if (a[lastIndex] === 0) {\n          lastIndex--;\n        } else {\n          break;\n        }\n      }\n      return binaryDecoder.decode(a.subarray(0, lastIndex + 1));\n    }\n    return binaryDecoder.decode(a);\n  }\n  getChunk(offset) {\n    let size = super.getUint32(offset + 4, true);\n    let end = offset + 8 + size;\n    if (size % 2 === 1)\n      end++;\n    return {type: this.getBinaryString(offset, 4), size, start: offset, end};\n  }\n}\n","import {binaryDecoder, indexBy} from './commons.js';\n\nconst AVIF_BRANDS = ['avif', 'avis'];\nconst HEIF_BRANDS = ['mif1', 'msf1'];\nconst HEIC_BRANDS = ['heic', 'heix', 'hevc', 'hevx'];\n\n/**\n * @param {File} file\n * @returns {Object}\n * @async\n */\nexport async function readFile(file) {\n  let fileSize = file.size;\n  let buffer = await file.arrayBuffer();\n  let view = new BMFFDataView(buffer);\n  if (fileSize < 12) {\n    throw new Error('Not a ISO BMFF file');\n  }\n  let ftypBox = view.getFileTypeBox(0);\n  let brand = ftypBox.major_brand;\n  if (!(AVIF_BRANDS.includes(brand) || HEIF_BRANDS.includes(brand) ||\n    HEIC_BRANDS.includes(brand))) {\n    throw new Error('Not a AVIF/HEIF/HEIC file');\n  }\n  let result = {};\n  let info = {};\n  let flags = 0;\n  let metaBox = null;\n  searchBoxes: for (let j = ftypBox.end; j < fileSize; ) {\n    let box = view.getBox(j, Box);\n    switch (box.type) {\n      case 'meta':\n        metaBox = view.getMetaBox(box);\n        break searchBoxes;\n      case 'mdat':\n        break searchBoxes;\n    }\n    j = box.end;\n  }\n  if (metaBox) {\n    let metaObj = indexBy(metaBox.subBoxes, 'type');\n    let {iinf, iprp} = metaObj;\n    if (iinf) {\n      let pItemID = metaObj.pitm?.item_ID;\n      let pItem = iinf.items_infos.find((e) => e.item_ID === pItemID); // primary item\n      if (pItem?.type === 'grid')\n        info.grid = true;\n      let item;\n      item = iinf.items_infos.find((e) => e.item_type === 'Exif');\n      if (item) {\n        let content = getItemData(view, metaObj, item).buffer;\n        if (content.byteLength > 0) {\n          result.EXIF = {content};\n          flags |= 0b100;\n        }\n      }\n      item = iinf.items_infos.find((e) => e.item_name === 'XMP' ||\n        e.item_type === 'mime' && e.content_type === 'application/rdf+xml');\n      if (item) {\n        let content = getItemData(view, metaObj, item).buffer;\n        if (content.byteLength > 0) {\n          result.XMP = {content};\n          flags |= 0b10;\n        }\n      }\n    }\n    if (iprp) {\n      let ipco = iprp.subBoxes.find((e) => e.type === 'ipco');\n      if (ipco) {\n        for (let e of ipco.subBoxes) {\n          switch (e.type) {\n            case 'colr':\n              if (e.colour_type === 'prof' || e.colour_type === 'rICC') {\n                result.ICC = {content: e.ICC_profile.buffer};\n                flags |= 0b1;\n              }\n              break;\n            case 'ispe':\n              if (!info.width || e.width * e.height > info.width * info.height) { // FIXME\n                info.width = e.width;\n                info.height = e.height;\n              }\n              break;\n            case 'pixi':\n              if (!info.bitDepth) {\n                if (e.channels >= 3) {\n                  info.bitDepth = e.bit_depth;\n                }\n              }\n              if (e.channels === 1 || e.channels > 3) {\n                info.alpha = true;\n              }\n              break;\n            case 'irot': \n              info.rotation = e.rotation;\n              break;\n            case 'imir': \n              info.mirror = e.mirror;\n              break;\n            case 'crtt':\n              info.creationTime = e.time;\n              break;\n            case 'mdft': {\n              info.modificationTime = e.time;\n              break;\n            }\n          }\n        }\n      }\n    }\n  }\n  // progressive, lossless\n  info.animation = ['avis', 'msf1', 'hevc', 'hevx'].includes(ftypBox.major_brand);\n  if (!info.bitDepth) {\n    info.bitDepth = 8;\n  }\n  if (!info.alpha) {\n    info.alpha = false;\n  }\n  result.INFO = {parsed: info};\n  info.flags = flags;\n  return result;\n}\n\nfunction getItemData(view, metaInfo, itemInfo) {\n  let {item_ID} = itemInfo;\n  let {iloc} = metaInfo;\n  let loc = iloc.items.find((e) => e.item_ID === item_ID);\n  if (!loc) {\n    throw new Error('Cannot found item_ID ' + item_ID + ' in iloc box');\n  }\n  let array = new Uint8Array(view.buffer, view.byteOffset, view.byteLength);\n  if (iloc.version === 0) {\n    let extent = loc.extents[0];\n    let offset = loc.base_offset + extent.extent_offset;\n    let length = extent.extent_length;\n    if (itemInfo.item_type === 'mime') {\n      return array.slice(offset, offset + length);\n    } else { // skip a empty box\n      let num = view.getUint32(offset);\n      offset += 4 + num;\n      length -= 4 + num;\n      return array.slice(offset, offset + length);\n    }\n  }\n  let {construction_method} = loc;\n  if (construction_method === 0) { // 0: file_offset\n    let extent = loc.extents[0];\n    let offset = extent.extent_offset;\n    let num = view.getUint32(offset);\n    offset += 4 + num;\n    let length = extent.extent_length - (4 + num);\n    return array.slice(offset, offset + length);\n  } else if (construction_method === 1) { // 1: idat_offset\n    // TODO\n  } else if (construction_method === 2) { // 2: item_offset\n    // TODO\n  }\n  return array.slice(0, 0);\n}\n\nfunction* findNullSeparatedStrings(view, offset = 0) {\n  let a = new Uint8Array(view.buffer, view.byteOffset + offset);\n  let start = 0;\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] === 0) {\n      yield {bytesRead: i + 1, data: binaryDecoder.decode(a.subarray(start, i))};\n      start = i + 1;\n    }\n  }\n}\n\nlet rSignature = /^\\w{3,4} ?/;\n\nclass BMFFDataView extends DataView {\n  /**\n   * @param {number} offset \n   * @param {number} length \n   * @param {boolean} [strip] \n   * @returns {string}\n   */\n  getBinaryString(offset, length, strip = false) {\n    let a = new Uint8Array(super.buffer, super.byteOffset + offset, length);\n    if (strip) {\n      let lastIndex = a.length - 1;\n      while (lastIndex > -1) {\n        if (a[lastIndex] === 0) {\n          lastIndex--;\n        } else {\n          break;\n        }\n      }\n      return binaryDecoder.decode(a.subarray(0, lastIndex + 1));\n    }\n    return binaryDecoder.decode(a);\n  }\n  /**\n   * @param {number} offset \n   * @param {Function} constructor\n   * @returns {Box} type specificed by param constructor\n   */\n  getBox(offset, constructor) {\n    let box = new constructor();\n    let size = super.getUint32(offset);\n    let boxtype = this.getBinaryString(offset + 4, 4);\n    box.type = boxtype;\n    let j = offset + 8;\n    if (size === 1) {\n      box.largesize = Number(super.getBigUint64(j));\n      j += 8;\n    } else if (size === 0) {\n      size = this.byteLength - offset;\n    }\n    box.size = size;\n    if (boxtype === 'uuid') {\n      box.usertype = this.getBinaryString(j, 16);\n      j += 16;\n    }\n    if (!rSignature.test(boxtype)) {\n      console.warn('Unexpected box signature: ' + boxtype);\n    }\n    box.start = offset;\n    box.end = offset + size; // payload size\n    box.cur = j;\n    return box;\n  }\n  /**\n   * @param {Box} initBox\n   * @returns {FullBox}\n   */\n  getFullBox(initBox) {\n    let box = initBox;\n    let {cur} = box;\n    box.version = super.getUint8(cur);\n    box.flags = super.getUint8(cur + 1) << 24 | super.getUint16(cur + 2);\n    box.cur = cur + 4;\n    return box;\n  }\n  /**\n   * @param {number|Box} offset\n   * @returns {FileTypeBox}\n   */\n  getFileTypeBox(offset) {\n    let box;\n    if (typeof offset === 'number') {\n      box = this.getBox(offset, FileTypeBox);\n      if (box.type !== 'ftyp') {\n        throw new Error(`Expected boxtype to be \"ftyp\", but got \"${box.type}\"`);\n      }\n    } else {\n      let initBox = offset;\n      box = initBox;\n    }\n    let {cur: j} = box;\n    box.major_brand = this.getBinaryString(j, 4);\n    box.minor_version = super.getUint32(j + 4, 4);\n    j += 8;\n    let count = Math.floor((box.end - j) / 4);\n    let arr = new Array(count);\n    for (let i = 0; i < count; i++) {\n      arr[i] = this.getBinaryString(j, 4);\n      j += 4;\n    }\n    box.compatible_brands = arr;\n    box.cur = j;\n    return box;\n  }\n  /**\n   * @param {Box} initBox\n   * @returns {MetaBoxBox}\n   */\n  getMetaBox(initBox) {\n    let box = this.getFullBox(initBox);\n    let {cur: j} = box;\n    let subBoxes = box.subBoxes = [];\n    while (j < box.end) {\n      let b = this.getBox(j, Box);\n      switch (b.type) {\n        case 'hdlr':\n          b = this.getHandlerBox(b);\n          break;\n        case 'pitm':\n          b = this.getPrimaryItemBox(b);\n          break;\n        case 'iloc':\n          b = this.getItemLocationBox(b);\n          break;\n        case 'iinf':\n          b = this.getItemInfoBox(b);\n          break;\n        case 'iref':\n          b = this.getItemReferenceBox(b);\n          break;\n        case 'iprp':\n          b = this.getItemPropertiesBox(b);\n          break;\n        case 'idat':\n          b = this.getItemDataBox(b);\n          break;\n      }\n      subBoxes.push(b);\n      j = b.end;\n    }\n    box.cur = j;\n    return box;\n  }\n  /**\n   * @param {Box} initBox\n   * @returns {HandlerBox}\n   */\n  getHandlerBox(initBox) {\n    let box = this.getFullBox(initBox);\n    let j = box.cur;\n    let pre_defined = super.getUint32(j);\n    if (pre_defined !== 0) {\n      throw new Error(`Expected pre_defined to be 0, bot got ${box.pre_defined}`);\n    }\n    box.handler_type = this.getBinaryString(j + 4, 4);\n    j += 20;\n    let count = box.end - j;\n    box.name = this.getBinaryString(j, count, true);\n    box.cur = box.end;\n    return box;\n  }\n  /**\n   * @param {Box} initBox\n   * @returns {PrimaryItemBox}\n   */\n  getPrimaryItemBox(initBox) {\n    let box = this.getFullBox(initBox);\n    let {cur: j, version} = box;\n    if (version === 0) {\n      box.item_ID = super.getUint16(j);\n      j += 2;\n    } else {\n      box.item_ID = super.getUint32(j);\n      j += 2;\n    }\n    box.cur = j;\n    return box;\n  }\n  /**\n   * @param {Box} initBox\n   * @returns {ItemLocationBox}\n   */\n  getItemLocationBox(initBox) {\n    let box = this.getFullBox(initBox);\n    let {cur: j, version} = box;\n    let bits = super.getUint16(j);\n    j += 2;\n    let offset_size = box.offset_size = (bits >> 12) & 0xF;\n    let length_size = box.length_size = (bits >> 8) & 0xF;\n    let base_offset_size = box.base_offset_size = (bits >> 4) & 0xF;\n    let index_size = 0;\n    if (version === 1 || version === 2) {\n      index_size = box.index_size = (bits >> 0) & 0xF;\n    } else {\n      box.reserved = (bits >> 0) & 0xF;\n    }\n    let item_count = 0;\n    if (version < 2) {\n      item_count = super.getUint16(j);\n      j += 2;\n    } else if (version === 2) {\n      item_count = super.getUint32(j);\n      j += 4;\n    }\n    let items = box.items = [];\n    for (let i = 0; i < item_count; i++) {\n      let item = items[i] = {};\n      if (version < 2) {\n        item.item_ID = super.getUint16(j);\n        j += 2;\n      } else {\n        item.item_ID = super.getUint32(j);\n        j += 4;\n      }\n      if (version === 1 || version === 2) {\n        bits = super.getUint16(j);\n        j += 2;\n        item.reserved = (bits >> 4) & 0xF;\n        item.construction_method = bits & 0xF;\n      }\n      item.data_reference_index = super.getUint16(j);\n      j += 2;\n      switch (base_offset_size) {\n        case 0: item.base_offset = 0; break;\n        case 1: item.base_offset = super.getUint8(j); break;\n        case 2: item.base_offset = super.getUint16(j); break;\n        case 4: item.base_offset = super.getUint32(j); break;\n        case 8: item.base_offset = Number(super.getBigUint64(j)); break;\n        default:\n          throw new Error('Unexpected base_offset_size: ' + base_offset_size);\n      }\n      j += base_offset_size;\n      let extent_count = super.getUint16(j);\n      j += 2;\n      let extents = item.extents = [];\n      for (let k = 0; k < extent_count; k++) {\n        let extent = extents[k] = {};\n        if ((version === 1 || version === 2) && index_size > 0) {\n          switch (index_size) {\n            case 1: extent.extent_index = super.getUint8(j); break;\n            case 2: extent.extent_index = super.getUint16(j); break;\n            case 4: extent.extent_index = super.getUint32(j); break;\n            case 8: extent.extent_index = Number(super.getBigUint64(j)); break;\n            default: throw new Error('Unexpected index_size: ' + index_size);\n          }\n          j += index_size;\n        }\n        switch (offset_size) {\n          case 0: break;\n          case 1: extent.extent_offset = super.getUint8(j); break;\n          case 2: extent.extent_offset = super.getUint16(j); break;\n          case 4: extent.extent_offset = super.getUint32(j); break;\n          case 8: extent.extent_offset = Number(super.getBigUint64(j)); break;\n          default: throw new Error('Unexpected index_size: ' + offset_size);\n        }\n        j += offset_size;\n        switch (length_size) {\n          case 0: break;\n          case 1: extent.extent_length = super.getUint8(j); break;\n          case 2: extent.extent_length = super.getUint16(j); break;\n          case 4: extent.extent_length = super.getUint32(j); break;\n          case 8: extent.extent_length = Number(super.getBigUint64(j)); break;\n          default: throw new Error('Unexpected index_size: ' + length_size);\n        }\n        j += length_size;\n      }\n    }\n    box.cur = box.end;\n    return box;\n  }\n  /**\n   * @param {Box} initBox\n   * @returns {ItemDataBox}\n   */\n  getItemDataBox(initBox) {\n    let box = initBox;\n    box.data = new Uint8Array(this.buffer).slice(box.cur, box.end);\n    box.cur = box.end;\n    return box;\n  }\n  /**\n   * @param {number} offset\n   * @returns {SingleItemTypeReferenceBox}\n   */\n  getSingleItemTypeReferenceBox(offset) {\n    let box = this.getFullBox(this.getBox(offset, SingleItemTypeReferenceBox));\n    let {cur: j} = box;\n    box.from_item_ID = super.getUint16(j);\n    j += 2;\n    let reference_count = box.reference_count = super.getUint16(j);\n    j += 2;\n    let to_item_ID = box.to_item_ID = new Uint16Array(reference_count);\n    for (let i = 0; i < reference_count; i++) {\n      to_item_ID[i] = super.getUint16(j);\n      j += 2;\n    }\n    box.cur = j;\n    return box;\n  }\n  /**\n   * @param {number} offset\n   * @returns {SingleItemTypeReferenceBoxLarge}\n   */\n  getSingleItemTypeReferenceBoxLarge(offset) {\n    let box = this.getFullBox(this.getBox(offset, SingleItemTypeReferenceBoxLarge));\n    let {cur: j} = box;\n    box.from_item_ID = super.getUint32(j);\n    j += 4;\n    let reference_count = box.reference_count = super.getUint16(j);\n    j += 2;\n    let to_item_ID = box.to_item_ID = new Uint32Array(reference_count);\n    for (let i = 0; i < reference_count; i++) {\n      to_item_ID[i] = super.getUint32(j);\n      j += 4;\n    }\n    box.cur = j;\n    return box;\n  }\n  /**\n   * @param {Box} initBox\n   * @returns {ItemReferenceBox}\n   */\n  getItemReferenceBox(initBox) {\n    let box = this.getFullBox(initBox);\n    let {cur: j, version} = box;\n    let references = box.references = [];\n    if (version === 0) {\n      while (j < box.end) {\n        let subBox = this.getSingleItemTypeReferenceBox(j);\n        j = subBox.end;\n        references.push(subBox);\n      }\n    } else {\n      while (j < box.end) {\n        let subBox = this.getSingleItemTypeReferenceBoxLarge(j);\n        j = subBox.end;\n        references.push(subBox);\n      }\n    }\n    box.cur = j;\n    return box;\n  }\n  getItemInfoEntry(offset) {\n    let box = this.getFullBox(this.getBox(offset, ItemInfoEntry));\n    let {cur: j, version} = box;\n    if (version === 0 || version === 1) {\n      box.item_ID = super.getUint16(j);\n      j += 2;\n      box.item_protection_index = super.getUint16(j);\n      j += 2;\n\n      let g = findNullSeparatedStrings(this, j);\n      let next;\n\n      if (!(next = g.next()).done) {\n        box.item_name = next.value.data;\n      }\n      if (!(next = g.next()).done) {\n        box.content_type = next.value.data;\n      }\n      if (!(next = g.next()).done) {\n        box.content_encoding = next.value.data;\n      }\n      if (version === 1) {\n        let extension_type;\n        if (!(next = g.next()).done) {\n          extension_type = box.extension_type = next.value.data;\n        }\n        if (extension_type === 'fdel') {\n          if (!(next = g.next()).done) {\n            box.content_location = next.value.data;\n          }\n          if (!(next = g.next()).done) {\n            box.content_MD5 = next.value.data;\n          }\n          j += g.bytesRead;\n          box.content_length = super.getBigUint64(j);\n          j += 8;\n          box.transfer_length = super.getBigUint64(j);\n          j += 8;\n          let entry_count = box.entry_count = super.getBigUint8(j);\n          j += 1;\n          let group_ids = box.group_ids = new Uint32Array(entry_count);\n          for (let i = 0; i < entry_count; i++) {\n            group_ids[i] = super.getUint32(j);\n            j += 4;\n          }\n        }\n      }\n      box.cur = box.end;\n    } else if (version >= 2) {\n      if (version === 2) {\n        box.item_ID = super.getUint16(j);\n        j += 2;\n      } else if (version === 3) {\n        box.item_ID = super.getUint32(j);\n        j += 4;\n      }\n      box.item_protection_index = super.getUint16(j);\n      j += 2;\n      let item_type = box.item_type = this.getBinaryString(j, 4);\n      j += 4;\n      let g = findNullSeparatedStrings(this, j);\n      let next;\n      if (!(next = g.next()).done) {\n        box.item_name = next.value.data;\n      }\n      if (item_type === 'mime') {\n        if (!(next = g.next()).done) {\n          box.content_type = next.value.data;\n        }\n        if (!(next = g.next()).done) {\n          box.content_encoding = next.value.data;\n        }\n        j = box.end;\n      } else if (item_type === 'uri ') {\n        if (!(next = g.next()).done) {\n          box.item_uri_type = next.value.data;\n        }\n        j = box.end;\n      }\n      box.cur = j;\n    }\n    return box;\n  }\n  /**\n   * @param {Box} initBox \n   * @returns {ItemInfoBox}\n   */\n  getItemInfoBox(initBox) {\n    let box = this.getFullBox(initBox);\n    let {cur: j, version} = box;\n    let entry_count;\n    if (version === 0) {\n      entry_count = super.getUint16(j);\n      j += 2;\n    } else {\n      entry_count = super.getUint32(j);\n      j += 4;\n    }\n    let items_infos = box.items_infos = new Array(entry_count);\n    for (let i = 0; i < entry_count; i++) {\n      let item_info = items_infos[i] = this.getItemInfoEntry(j);\n      j = item_info.end;\n    }\n    return box;\n  }\n  /**\n   * @param {Box} initBox \n   * @returns {ItemPropertyContainerBox}\n   */\n  getItemPropertyContainerBox(initBox) { \n    let box = initBox;\n    let {cur: j} = box;\n    let entries = box.entries = [];\n    let subBoxes = box.subBoxes = [];\n    while (j < box.end) {\n      let b = this.getBox(j, Box);\n      switch (b.type) {\n        case 'ispe': {\n          this.getImageSpacialExtent(b);\n          subBoxes.push(b);\n          break;\n        }\n        case 'pixi': {\n          this.getPixelInformation(b);\n          subBoxes.push(b);\n          break;\n        }\n        case 'colr': {\n          this.getColourInformationBox(b);\n          subBoxes.push(b);\n          break;\n        }\n        case 'crtt':\n        case 'mdft': {\n          this.getTimeInformationBox(b);\n          subBoxes.push(b);\n          break;\n        }\n        case 'irot': {\n          this.getImageRotation(b);\n          subBoxes.push(b);\n          break;\n        }\n        case 'imir': {\n          this.getImageMirror(b);\n          subBoxes.push(b);\n          break;\n        }\n        // case 'clap': {\n        //   this.getCleanAperture(b);\n        //   subBoxes.push(b);\n        //   break;\n        // }\n        default: {\n          let entry = {};\n          entries.push(entry);\n          entry.name = b.type;\n          entry.data = new Uint8Array(super.buffer).slice(b.cur, b.end);\n          break;\n        }\n      }\n      j = b.end;\n    }\n    box.cur = j;\n    return box;\n  }\n  /**\n   * @param {Box} initBox \n   * @returns {ItemPropertiesBox}\n   */\n  getItemPropertiesBox(initBox) {\n    let box = initBox;\n    let {cur: j} = box;\n    let subBoxes = box.subBoxes = [];\n    while (j < box.end) {\n      let b = this.getBox(j, Box);\n      switch (b.type) {\n        case 'ipco':\n          b = this.getItemPropertyContainerBox(b);\n          break;\n        case 'ipma':\n          b = this.getItemPropertyAssociation(b);\n          break;\n      }\n      subBoxes.push(b);\n      j = b.end;\n    }\n    return box;\n  }\n  /**\n   * @param {Box} initBox\n   * @returns {ColourInformationBox}\n   */\n  getColourInformationBox(box) {\n    let {cur: j} = box;\n    let colour_type = box.colour_type = this.getBinaryString(j, 4);\n    j += 4;\n    if (colour_type === 'nclx') {\n      box.colour_primaries = super.getUint16(j);\n      box.transfer_characteristics = super.getUint16(j + 2);\n      box.matrix_coefficients = super.getUint16(j + 4);\n      box.full_range_flag = super.getUint8(j + 6);\n    } else if (colour_type === 'rICC' || colour_type === 'prof') {\n      let size = super.getUint32(j);\n      box.ICC_profile = new Uint8Array(this.buffer).slice(j, j + size);\n    }\n    box.cur = box.end;\n    return box;\n  }\n  getTimeInformationBox(box) {\n    let {cur: j} = box;\n    box.time = Number(super.getBigUint64(j));\n    box.cur = box.end;\n    return box;\n  }\n  getImageSpacialExtent(box) {\n    let {cur: j} = box;\n    box.item_ID = super.getUint32(j);\n    box.width = super.getUint32(j + 4);\n    box.height = super.getUint32(j + 8);\n    box.cur = box.end;\n    return box;\n  }\n  getPixelInformation(box) {\n    let {cur: j} = box;\n    box.item_ID = super.getUint32(j);\n    box.channels = super.getUint8(j + 4);\n    box.bit_depth = super.getUint8(j + 5);\n    box.cur = box.end;\n    return box;\n  }\n  getImageRotation(box) {\n    let {cur: j} = box;\n    box.rotation = super.getUint8(j) * 90;\n    box.cur = j + 1;\n    return box;\n  }\n  getImageMirror(box) {\n    let {cur: j} = box;\n    box.mirror = super.getUint8(j) * 90;\n    box.cur = j + 1;\n    return box;\n  }\n  getCleanAperture(box) {\n    return box;\n  }\n  /**\n   * @param {Box} initBox \n   * @returns {ItemPropertyContainerBox}\n   */\n  getItemPropertyAssociation(box) {\n    let {cur: j} = box;\n    // TODO\n    box.cur = j;\n    return box;\n  }\n}\n\n/* eslint-disable no-unused-vars */\nclass Box {\n  type;\n  size;\n  start;\n  end;\n}\nclass FullBox extends Box {\n  version;\n  flags;\n}\n// ftyp\nclass FileTypeBox extends Box {\n  major_brand;\n  minor_version;\n  compatible_brands;\n}\n// meta\nclass MetaBox extends FullBox {\n  subBoxes;\n}\n// hdlr\nclass HandlerBox extends FullBox {\n  pre_defined = 0;\n  handler_type;\n  name;\n}\n// pitm\nclass PrimaryItemBox extends FullBox {\n  item_ID;\n}\n// iloc\nclass ItemLocationBox extends FullBox {\n  offset_size;\n  length_size;\n  base_offset_size;\n  index_size;\n  item_count;\n  items;\n}\n// idat\nclass ItemDataBox extends Box {\n  data;\n}\n// iref\nclass ItemReferenceBox extends FullBox {\n  references;\n}\nclass SingleItemTypeReferenceBox {\n  from_item_ID;\n  reference_count;\n  to_item_ID;\n}\nclass SingleItemTypeReferenceBoxLarge {\n  from_item_ID;\n  reference_count;\n  to_item_ID;\n}\nclass ItemInfoEntry extends FullBox {\n  item_ID;\n  item_protection_index;\n  item_name;\n  content_type;\n  item_type;\n}\n// iinf\nclass ItemInfoBox extends FullBox {\n  items_infos;\n}\n// colr\nclass ColourInformationBox extends Box {\n  colour_type;\n  ICC_profile;\n}\n// iprp\nclass ItemPropertiesBox extends FullBox {\n  subBoxes;\n}\n// ipco\nclass ItemPropertyContainerBox extends FullBox {\n  subBoxes;\n}\n// ipma\nclass ItemPropertyAssociation extends FullBox {\n  entries = [\n    {\n      item_ID: 1,\n      associations: [\n        {essential: 1, property_index: 1}\n      ]\n    }\n  ];\n}\n","\nexport async function readFile(file) {\n  let result = {};\n  let flags = 0;\n  let text = await file.text();\n  let xmpText;\n  let start = text.indexOf('<x:xmpmeta');\n  if (start > -1) {\n    let end = text.indexOf('</x:xmpmeta>', start);\n    if (end > -1) {\n      xmpText = text.slice(start, end + 12);\n    }\n  }\n  if (xmpText) {\n    result.XMP = {content: xmpText};\n    flags |= 0b10;\n  }\n  let domParser = new DOMParser();\n  let doc = domParser.parseFromString(text, 'text/xml');\n  let {documentElement: root} = doc;\n  let width = root.getAttribute('width');\n  let height = root.getAttribute('height');\n  if (!width) {\n    let m = /\\d+ \\d+ (\\d+) (\\d+)/.exec(root.getAttribute('viewBox'));\n    if (m) {\n      width = m[1];\n      height = m[2];\n    }\n  }\n  let info = {width: +width, height: +height, flags, alpha: true, lossless: true};\n  result.INFO = {parsed: info};\n  return result;\n}\n","/**\n * Comprehensive list of TIFF and EIXF tags\n * found on https://exiftool.org/TagNames/EXIF.html\n */\nexport const tagNameMap = {\n  0x0001: 'InteropIndex',\n  0x0002: 'InteropVersion',\n  0x000B: 'ProcessingSoftware',\n  0x00FE: 'SubfileType',\n  0x00FF: 'OldSubfileType',\n  0x0100: 'ImageWidth',\n  0x0101: 'ImageHeight',\n  0x0102: 'BitsPerSample',\n  0x0103: 'Compression',\n  0x0106: 'PhotometricInterpretation',\n  0x0107: 'Thresholding',\n  0x0108: 'CellWidth',\n  0x0109: 'CellLength',\n  0x010A: 'FillOrder',\n  0x010D: 'DocumentName',\n  0x010E: 'ImageDescription',\n  0x010F: 'Make',\n  0x0110: 'Model',\n  0x0111: 'StripOffsets',\n  0x0112: 'Orientation',\n  0x0115: 'SamplesPerPixel',\n  0x0116: 'RowsPerStrip',\n  0x0117: 'StripByteCounts',\n  0x0118: 'MinSampleValue',\n  0x0119: 'MaxSampleValue',\n  0x011A: 'XResolution',\n  0x011B: 'YResolution',\n  0x011C: 'PlanarConfiguration',\n  0x011D: 'PageName',\n  0x011E: 'XPosition',\n  0x011F: 'YPosition',\n  0x0120: 'FreeOffsets',\n  0x0121: 'FreeByteCounts',\n  0x0122: 'GrayResponseUnit',\n  0x0123: 'GrayResponseCurve',\n  0x0124: 'T4Options',\n  0x0125: 'T6Options',\n  0x0128: 'ResolutionUnit',\n  0x0129: 'PageNumber',\n  0x012C: 'ColorResponseUnit',\n  0x012D: 'TransferFunction',\n  0x0131: 'Software',\n  0x0132: 'ModifyDate',\n  0x013B: 'Artist',\n  0x013C: 'HostComputer',\n  0x013D: 'Predictor',\n  0x013E: 'WhitePoint',\n  0x013F: 'PrimaryChromaticities',\n  0x0140: 'ColorMap',\n  0x0141: 'HalftoneHints',\n  0x0142: 'TileWidth',\n  0x0143: 'TileLength',\n  0x0144: 'TileOffsets',\n  0x0145: 'TileByteCounts',\n  0x0146: 'BadFaxLines',\n  0x0147: 'CleanFaxData',\n  0x0148: 'ConsecutiveBadFaxLines',\n  0x014A: 'SubIFD',\n  0x014C: 'InkSet',\n  0x014D: 'InkNames',\n  0x014E: 'NumberofInks',\n  0x0150: 'DotRange',\n  0x0151: 'TargetPrinter',\n  0x0152: 'ExtraSamples',\n  0x0153: 'SampleFormat',\n  0x0154: 'SMinSampleValue',\n  0x0155: 'SMaxSampleValue',\n  0x0156: 'TransferRange',\n  0x0157: 'ClipPath',\n  0x0158: 'XClipPathUnits',\n  0x0159: 'YClipPathUnits',\n  0x015A: 'Indexed',\n  0x015B: 'JPEGTables',\n  0x015F: 'OPIProxy',\n  0x0190: 'GlobalParametersIFD',\n  0x0191: 'ProfileType',\n  0x0192: 'FaxProfile',\n  0x0193: 'CodingMethods',\n  0x0194: 'VersionYear',\n  0x0195: 'ModeNumber',\n  0x01B1: 'Decode',\n  0x01B2: 'DefaultImageColor',\n  0x01B3: 'T82Options',\n  0x01B5: 'JPEGTables',\n  0x0200: 'JPEGProc',\n  0x0201: 'ThumbnailOffset',\n  0x0202: 'ThumbnailLength',\n  0x0203: 'JPEGRestartInterval',\n  0x0205: 'JPEGLosslessPredictors',\n  0x0206: 'JPEGPointTransforms',\n  0x0207: 'JPEGQTables',\n  0x0208: 'JPEGDCTables',\n  0x0209: 'JPEGACTables',\n  0x0211: 'YCbCrCoefficients',\n  0x0212: 'YCbCrSubSampling',\n  0x0213: 'YCbCrPositioning',\n  0x0214: 'ReferenceBlackWhite',\n  0x022F: 'StripRowCounts',\n  0x02BC: 'ApplicationNotes',\n  0x03E7: 'USPTOMiscellaneous',\n  0x1000: 'RelatedImageFileFormat',\n  0x1001: 'RelatedImageWidth',\n  0x1002: 'RelatedImageHeight',\n  0x4746: 'Rating',\n  0x4747: 'XP_DIP_XML',\n  0x4748: 'StitchInfo',\n  0x4749: 'RatingPercent',\n  0x7000: 'SonyRawFileType',\n  0x7010: 'SonyToneCurve',\n  0x7031: 'VignettingCorrection',\n  0x7032: 'VignettingCorrParams',\n  0x7034: 'ChromaticAberrationCorrection',\n  0x7035: 'ChromaticAberrationCorrParams',\n  0x7036: 'DistortionCorrection',\n  0x7037: 'DistortionCorrParams',\n  0x7038: 'SonyRawImageSize',\n  0x7310: 'BlackLevel',\n  0x7313: 'WB_RGGBLevels',\n  0x74C7: 'SonyCropTopLeft',\n  0x74C8: 'SonyCropSize',\n  0x800D: 'ImageID',\n  0x80A3: 'WangTag1',\n  0x80A4: 'WangAnnotation',\n  0x80A5: 'WangTag3',\n  0x80A6: 'WangTag4',\n  0x80B9: 'ImageReferencePoints',\n  0x80BA: 'RegionXformTackPoint',\n  0x80BB: 'WarpQuadrilateral',\n  0x80BC: 'AffineTransformMat',\n  0x80E3: 'Matteing',\n  0x80E4: 'DataType',\n  0x80E5: 'ImageDepth',\n  0x80E6: 'TileDepth',\n  0x8214: 'ImageFullWidth',\n  0x8215: 'ImageFullHeight',\n  0x8216: 'TextureFormat',\n  0x8217: 'WrapModes',\n  0x8218: 'FovCot',\n  0x8219: 'MatrixWorldToScreen',\n  0x821A: 'MatrixWorldToCamera',\n  0x827D: 'Model2',\n  0x828D: 'CFARepeatPatternDim',\n  0x828E: 'CFAPattern2',\n  0x828F: 'BatteryLevel',\n  0x8290: 'KodakIFD',\n  0x8298: 'Copyright',\n  // #region Photo\n  0x829A: 'ExposureTime',\n  0x829D: 'FNumber',\n  0x82A5: 'MDFileTag',\n  0x82A6: 'MDScalePixel',\n  0x82A7: 'MDColorTable',\n  0x82A8: 'MDLabName',\n  0x82A9: 'MDSampleInfo',\n  0x82AA: 'MDPrepDate',\n  0x82AB: 'MDPrepTime',\n  0x82AC: 'MDFileUnits',\n  0x830E: 'PixelScale',\n  0x8335: 'AdventScale',\n  0x8336: 'AdventRevision',\n  0x835C: 'UIC1Tag',\n  0x835D: 'UIC2Tag',\n  0x835E: 'UIC3Tag',\n  0x835F: 'UIC4Tag',\n  0x83BB: 'IPTC-NAA',\n  0x847E: 'IntergraphPacketData',\n  0x847F: 'IntergraphFlagRegisters',\n  0x8480: 'IntergraphMatrix',\n  0x8481: 'INGRReserved',\n  0x8482: 'ModelTiePoint',\n  0x84E0: 'Site',\n  0x84E1: 'ColorSequence',\n  0x84E2: 'IT8Header',\n  0x84E3: 'RasterPadding',\n  0x84E4: 'BitsPerRunLength',\n  0x84E5: 'BitsPerExtendedRunLength',\n  0x84E6: 'ColorTable',\n  0x84E7: 'ImageColorIndicator',\n  0x84E8: 'BackgroundColorIndicator',\n  0x84E9: 'ImageColorValue',\n  0x84EA: 'BackgroundColorValue',\n  0x84EB: 'PixelIntensityRange',\n  0x84EC: 'TransparencyIndicator',\n  0x84ED: 'ColorCharacterization',\n  0x84EE: 'HCUsage',\n  0x84EF: 'TrapIndicator',\n  0x84F0: 'CMYKEquivalent',\n  0x8546: 'SEMInfo',\n  0x8568: 'AFCP_IPTC',\n  0x85B8: 'PixelMagicJBIGOptions',\n  0x85D7: 'JPLCartoIFD',\n  0x85D8: 'ModelTransform',\n  0x8602: 'WB_GRGBLevels',\n  0x8606: 'LeafData',\n  0x8649: 'PhotoshopSettings',\n  0x8769: 'ExifOffset',\n  0x8773: 'ICC_Profile',\n  0x877F: 'TIFF_FXExtensions',\n  0x8780: 'MultiProfiles',\n  0x8781: 'SharedData',\n  0x8782: 'T88Options',\n  0x87AC: 'ImageLayer',\n  0x87AF: 'GeoTiffDirectory',\n  0x87B0: 'GeoTiffDoubleParams',\n  0x87B1: 'GeoTiffAsciiParams',\n  0x87BE: 'JBIGOptions',\n  0x8822: 'ExposureProgram',\n  0x8824: 'SpectralSensitivity',\n  0x8825: 'GPSInfo',\n  0x8827: 'ISO',\n  0x8828: 'Opto-ElectricConvFactor',\n  0x8829: 'Interlace',\n  0x882A: 'TimeZoneOffset',\n  0x882B: 'SelfTimerMode',\n  0x8830: 'SensitivityType',\n  0x8831: 'StandardOutputSensitivity',\n  0x8832: 'RecommendedExposureIndex',\n  0x8833: 'ISOSpeed',\n  0x8834: 'ISOSpeedLatitudeyyy',\n  0x8835: 'ISOSpeedLatitudezzz',\n  0x885C: 'FaxRecvParams',\n  0x885D: 'FaxSubAddress',\n  0x885E: 'FaxRecvTime',\n  0x8871: 'FedexEDR',\n  0x888A: 'LeafSubIFD',\n  0x9000: 'ExifVersion',\n  0x9003: 'DateTimeOriginal',\n  0x9004: 'DateTimeDigitized',\n  0x9009: 'GooglePlusUploadCode',\n  0x9010:\t'OffsetTime',\n  0x9011:\t'OffsetTimeOriginal',\n  0x9012:\t'OffsetTimeDigitized',\n  0x9101: 'ComponentsConfiguration',\n  0x9102: 'CompressedBitsPerPixel',\n  0x9201: 'ShutterSpeedValue',\n  0x9202: 'ApertureValue',\n  0x9203: 'BrightnessValue',\n  0x9204: 'ExposureBiasValue',\n  0x9205: 'MaxApertureValue',\n  0x9206: 'SubjectDistance',\n  0x9207: 'MeteringMode',\n  0x9208: 'LightSource',\n  0x9209: 'Flash',\n  0x920A: 'FocalLength',\n  0x920B: 'FlashEnergy',\n  0x920C: 'SpatialFrequencyResponse',\n  0x920D: 'Noise',\n  0x920E: 'FocalPlaneXResolution',\n  0x920F: 'FocalPlaneYResolution',\n  0x9210: 'FocalPlaneResolutionUnit',\n  0x9211: 'ImageNumber',\n  0x9212: 'SecurityClassification',\n  0x9213: 'ImageHistory',\n  0x9214: 'SubjectArea',\n  0x9215: 'ExposureIndex',\n  0x9216: 'TIFF-EPStandardID',\n  0x9217: 'SensingMethod',\n  0x923A: 'CIP3DataFile',\n  0x923B: 'CIP3Sheet',\n  0x923C: 'CIP3Side',\n  0x923F: 'StoNits',\n  0x927C: 'MakerNote',\n  0x9286: 'UserComment',\n  0x9290: 'SubSecTime',\n  0x9291: 'SubSecTimeOriginal',\n  0x9292: 'SubSecTimeDigitized',\n  0x932F: 'MSDocumentText',\n  0x9330: 'MSPropertySetStorage',\n  0x9331: 'MSDocumentTextPosition',\n  0x935C: 'ImageSourceData',\n  0x9400: 'AmbientTemperature',\n  0x9401: 'Humidity',\n  0x9402: 'Pressure',\n  0x9403: 'WaterDepth',\n  0x9404: 'Acceleration',\n  0x9405: 'CameraElevationAngle',\n  0x9C9B: 'XPTitle',\n  0x9C9C: 'XPComment',\n  0x9C9D: 'XPAuthor',\n  0x9C9E: 'XPKeywords',\n  0x9C9F: 'XPSubject',\n  0xA000: 'FlashpixVersion',\n  0xA001: 'ColorSpace',\n  0xA002: 'PixelXDimension',\n  0xA003: 'PixelYDimension',\n  0xA004: 'RelatedSoundFile',\n  0xA005: 'InteropOffset',\n  0xA20B: 'FlashEnergy',\n  0xA20C: 'SpatialFrequencyResponse',\n  0xA20D: 'Noise',\n  0xA20E: 'FocalPlaneXResolution',\n  0xA20F: 'FocalPlaneYResolution',\n  0xA210: 'FocalPlaneResolutionUnit',\n  0xA211: 'ImageNumber',\n  0xA212: 'SecurityClassification',\n  0xA213: 'ImageHistory',\n  0xA214: 'SubjectLocation',\n  0xA215: 'ExposureIndex',\n  0xA216: 'TIFF-EPStandardID',\n  0xA217: 'SensingMethod',\n  0xA300: 'FileSource',\n  0xA301: 'SceneType',\n  0xA302: 'CFAPattern',\n  0xA401: 'CustomRendered',\n  0xA402: 'ExposureMode',\n  0xA403: 'WhiteBalance',\n  0xA404: 'DigitalZoomRatio',\n  0xA405: 'FocalLengthIn35mmFormat',\n  0xA406: 'SceneCaptureType',\n  0xA407: 'GainControl',\n  0xA408: 'Contrast',\n  0xA409: 'Saturation',\n  0xA40A: 'Sharpness',\n  0xA40B: 'DeviceSettingDescription',\n  0xA40C: 'SubjectDistanceRange',\n  0xA420: 'ImageUniqueID',\n  0xA430: 'CameraOwnerName',\n  0xA431: 'BodySerialNumber',\n  0xA432: 'LensSpecification',\n  0xA433: 'LensMake',\n  0xA434: 'LensModel',\n  0xA435: 'LensSerialNumber',\n  0xA436: 'Title',\n  0xA437: 'Photographer',\n  0xA438: 'ImageEditor',\n  0xA439: 'CameraFirmware',\n  0xA43A: 'RAWDevelopingSoftware',\n  0xA43B: 'ImageEditingSoftware',\n  0xA43C: 'MetadataEditingSoftware',\n  0xA460: 'CompositeImage',\n  0xA461: 'CompositeImageCount',\n  0xA462: 'CompositeImageExposureTimes',\n  0xA480: 'GDALMetadata',\n  0xA481: 'GDALNoData',\n  0xA500: 'Gamma',\n  // #endregion\n  0xAFC0: 'ExpandSoftware',\n  0xAFC1: 'ExpandLens',\n  0xAFC2: 'ExpandFilm',\n  0xAFC3: 'ExpandFilterLens',\n  0xAFC4: 'ExpandScanner',\n  0xAFC5: 'ExpandFlashLamp',\n  // #region MpfInfo\n  0xB000: 'MPFVersion',\n  0xB001: 'MPFNumberOfImages',\n  0xB002: 'MPFImageList',\n  0xB003: 'MPFImageUIDList',\n  0xB004: 'MPFTotalFrames',\n  0xB101: 'MPFIndividualNum',\n  0xB201: 'MPFPanOrientation',\n  0xB202: 'MPFPanOverlapH',\n  0xB203: 'MPFPanOverlapV',\n  0xB204: 'MPFBaseViewpointNum',\n  0xB205: 'MPFConvergenceAngle',\n  0xB206: 'MPFBaselineLength',\n  0xB207: 'MPFVerticalDivergence',\n  0xB208: 'MPFAxisDistanceX',\n  0xB209: 'MPFAxisDistanceY',\n  0xB20A: 'MPFAxisDistanceZ',\n  0xB20B: 'MPFYawAngle',\n  0xB20C: 'MPFPitchAngle',\n  0xB20D: 'MPFRollAngle',\n  // #endregion\n  0xB4C3: 'HasselbladRawImage',\n  0xBC01: 'PixelFormat',\n  0xBC02: 'Transformation',\n  0xBC03: 'Uncompressed',\n  0xBC04: 'ImageType',\n  0xBC80: 'ImageWidth',\n  0xBC81: 'ImageHeight',\n  0xBC82: 'WidthResolution',\n  0xBC83: 'HeightResolution',\n  0xBCC0: 'ImageOffset',\n  0xBCC1: 'ImageByteCount',\n  0xBCC2: 'AlphaOffset',\n  0xBCC3: 'AlphaByteCount',\n  0xBCC4: 'ImageDataDiscard',\n  0xBCC5: 'AlphaDataDiscard',\n  0xC427: 'OceScanjobDesc',\n  0xC428: 'OceApplicationSelector',\n  0xC429: 'OceIDNumber',\n  0xC42A: 'OceImageLogic',\n  0xC44F: 'Annotations',\n  0xC4A5: 'PrintIM',\n  0xC51B: 'HasselbladExif',\n  0xC573: 'OriginalFileName',\n  0xC580: 'USPTOOriginalContentType',\n  0xC5E0: 'CR2CFAPattern',\n  0xC612: 'DNGVersion',\n  0xC613: 'DNGBackwardVersion',\n  0xC614: 'UniqueCameraModel',\n  0xC615: 'LocalizedCameraModel',\n  0xC616: 'CFAPlaneColor',\n  0xC617: 'CFALayout',\n  0xC618: 'LinearizationTable',\n  0xC619: 'BlackLevelRepeatDim',\n  0xC61A: 'BlackLevel',\n  0xC61B: 'BlackLevelDeltaH',\n  0xC61C: 'BlackLevelDeltaV',\n  0xC61D: 'WhiteLevel',\n  0xC61E: 'DefaultScale',\n  0xC61F: 'DefaultCropOrigin',\n  0xC620: 'DefaultCropSize',\n  0xC621: 'ColorMatrix1',\n  0xC622: 'ColorMatrix2',\n  0xC623: 'CameraCalibration1',\n  0xC624: 'CameraCalibration2',\n  0xC625: 'ReductionMatrix1',\n  0xC626: 'ReductionMatrix2',\n  0xC627: 'AnalogBalance',\n  0xC628: 'AsShotNeutral',\n  0xC629: 'AsShotWhiteXY',\n  0xC62A: 'BaselineExposure',\n  0xC62B: 'BaselineNoise',\n  0xC62C: 'BaselineSharpness',\n  0xC62D: 'BayerGreenSplit',\n  0xC62E: 'LinearResponseLimit',\n  0xC62F: 'CameraSerialNumber',\n  0xC630: 'DNGLensInfo',\n  0xC631: 'ChromaBlurRadius',\n  0xC632: 'AntiAliasStrength',\n  0xC633: 'ShadowScale',\n  0xC634: 'DNGAdobeData',\n  0xC635: 'MakerNoteSafety',\n  0xC640: 'RawImageSegmentation',\n  0xC65A: 'CalibrationIlluminant1',\n  0xC65B: 'CalibrationIlluminant2',\n  0xC65C: 'BestQualityScale',\n  0xC65D: 'RawDataUniqueID',\n  0xC660: 'AliasLayerMetadata',\n  0xC68B: 'OriginalRawFileName',\n  0xC68C: 'OriginalRawFileData',\n  0xC68D: 'ActiveArea',\n  0xC68E: 'MaskedAreas',\n  0xC68F: 'AsShotICCProfile',\n  0xC690: 'AsShotPreProfileMatrix',\n  0xC691: 'CurrentICCProfile',\n  0xC692: 'CurrentPreProfileMatrix',\n  0xC6BF: 'ColorimetricReference',\n  0xC6C5: 'SRawType',\n  0xC6D2: 'PanasonicTitle',\n  0xC6D3: 'PanasonicTitle2',\n  0xC6F3: 'CameraCalibrationSig',\n  0xC6F4: 'ProfileCalibrationSig',\n  0xC6F5: 'ProfileIFD',\n  0xC6F6: 'AsShotProfileName',\n  0xC6F7: 'NoiseReductionApplied',\n  0xC6F8: 'ProfileName',\n  0xC6F9: 'ProfileHueSatMapDims',\n  0xC6FA: 'ProfileHueSatMapData1',\n  0xC6FB: 'ProfileHueSatMapData2',\n  0xC6FC: 'ProfileToneCurve',\n  0xC6FD: 'ProfileEmbedPolicy',\n  0xC6FE: 'ProfileCopyright',\n  0xC714: 'ForwardMatrix1',\n  0xC715: 'ForwardMatrix2',\n  0xC716: 'PreviewApplicationName',\n  0xC717: 'PreviewApplicationVersion',\n  0xC718: 'PreviewSettingsName',\n  0xC719: 'PreviewSettingsDigest',\n  0xC71A: 'PreviewColorSpace',\n  0xC71B: 'PreviewDateTime',\n  0xC71C: 'RawImageDigest',\n  0xC71D: 'OriginalRawFileDigest',\n  0xC71E: 'SubTileBlockSize',\n  0xC71F: 'RowInterleaveFactor',\n  0xC725: 'ProfileLookTableDims',\n  0xC726: 'ProfileLookTableData',\n  0xC740: 'OpcodeList1',\n  0xC741: 'OpcodeList2',\n  0xC74E: 'OpcodeList3',\n  0xC761: 'NoiseProfile',\n  0xC763: 'TimeCodes',\n  0xC764: 'FrameRate',\n  0xC772: 'TStop',\n  0xC789: 'ReelName',\n  0xC791: 'OriginalDefaultFinalSize',\n  0xC792: 'OriginalBestQualitySize',\n  0xC793: 'OriginalDefaultCropSize',\n  0xC7A1: 'CameraLabel',\n  0xC7A3: 'ProfileHueSatMapEncoding',\n  0xC7A4: 'ProfileLookTableEncoding',\n  0xC7A5: 'BaselineExposureOffset',\n  0xC7A6: 'DefaultBlackRender',\n  0xC7A7: 'NewRawImageDigest',\n  0xC7A8: 'RawToPreviewGain',\n  0xC7AA: 'CacheVersion',\n  0xC7B5: 'DefaultUserCrop',\n  0xC7D5: 'NikonNEFInfo',\n  0xC7E9: 'DepthFormat',\n  0xC7EA: 'DepthNear',\n  0xC7EB: 'DepthFar',\n  0xC7EC: 'DepthUnits',\n  0xC7ED: 'DepthMeasureType',\n  0xC7EE: 'EnhanceParams',\n  0xCD2D: 'ProfileGainTableMap',\n  0xCD2E: 'SemanticName',\n  0xCD30: 'SemanticInstanceID',\n  0xCD31: 'CalibrationIlluminant3',\n  0xCD32: 'CameraCalibration3',\n  0xCD33: 'ColorMatrix3',\n  0xCD34: 'ForwardMatrix3',\n  0xCD35: 'IlluminantData1',\n  0xCD36: 'IlluminantData2',\n  0xCD37: 'IlluminantData3',\n  0xCD38: 'MaskSubArea',\n  0xCD39: 'ProfileHueSatMapData3',\n  0xCD3A: 'ReductionMatrix3',\n  0xCD3B: 'RGBTables',\n  0xEA1C: 'Padding',\n  0xEA1D: 'OffsetSchema',\n  0xFDE8: 'OwnerName',\n  0xFDE9: 'SerialNumber',\n  0xFDEA: 'Lens',\n  0xFE00: 'KDC_IFD',\n  0xFE4C: 'RawFile',\n  0xFE4D: 'Converter',\n  0xFE4E: 'WhiteBalance',\n  0xFE51: 'Exposure',\n  0xFE52: 'Shadows',\n  0xFE53: 'Brightness',\n  0xFE54: 'Contrast',\n  0xFE55: 'Saturation',\n  0xFE56: 'Sharpness',\n  0xFE57: 'Smoothness',\n  0xFE58: 'MoireFilter'\n};\n\nexport const gpsTagNameMap = {\n  0x0000: 'GPSVersionID',\n  0x0001: 'GPSLatitudeRef',\n  0x0002: 'GPSLatitude',\n  0x0003: 'GPSLongitudeRef',\n  0x0004: 'GPSLongitude',\n  0x0005: 'GPSAltitudeRef',\n  0x0006: 'GPSAltitude',\n  0x0007: 'GPSTimeStamp',\n  0x0008: 'GPSSatellites',\n  0x0009: 'GPSStatus',\n  0x000A: 'GPSMeasureMode',\n  0x000B: 'GPSDOP',\n  0x000C: 'GPSSpeedRef',\n  0x000D: 'GPSSpeed',\n  0x000E: 'GPSTrackRef',\n  0x000F: 'GPSTrack',\n  0x0010: 'GPSImgDirectionRef',\n  0x0011: 'GPSImgDirection',\n  0x0012: 'GPSMapDatum',\n  0x0013: 'GPSDestLatitudeRef',\n  0x0014: 'GPSDestLatitude',\n  0x0015: 'GPSDestLongitudeRef',\n  0x0016: 'GPSDestLongitude',\n  0x0017: 'GPSDestBearingRef',\n  0x0018: 'GPSDestBearing',\n  0x0019: 'GPSDestDistanceRef',\n  0x001A: 'GPSDestDistance',\n  0x001B: 'GPSProcessingMethod',\n  0x001C: 'GPSAreaInformation',\n  0x001D: 'GPSDateStamp',\n  0x001E: 'GPSDifferential',\n  0x001F: 'GPSHPositioningError'\n};\n","/**\n * EXIF 2.32 parser\n * based on https://github.com/devongovett/exif-reader\n */\nimport {binaryDecoder} from './commons.js';\nimport {tagNameMap as exifTagNameMap, gpsTagNameMap} from './exif-tags.js';\n\nexport function parse(buffer) {\n  let array = new Uint8Array(buffer);\n  let view = new TagDataView(buffer);\n  if (array.length <= 8)\n    throw new Error('Invalid EXIF data: ends before ifdOffset');\n\n  let byteOrderMark = view.getUint32(0);\n  let littleEndian;\n  if (byteOrderMark === 0x49492A00) { // 'II*\\x00'\n    littleEndian = true;\n  } else if (byteOrderMark === 0x4D4D002A) { // 'MM\\x00*'\n    littleEndian = false;\n  } else {\n    throw new Error('Invalid EXIF data: expected byte order marker.');\n  }\n  let ifdOffset = view.getUint32(4, littleEndian);\n  if (ifdOffset < 8)\n    throw new Error('Invalid EXIF data: ifdOffset < 8');\n\n  let parsed = {};\n  let ifd0 = getTags(view, ifdOffset, exifTagNameMap, littleEndian);\n  parsed.tiff = ifd0;\n\n  if (array.length >= ifdOffset + 2) {\n    let numEntries = view.getUint16(ifdOffset, littleEndian);\n    if (array.length >= ifdOffset + 2 + numEntries * 12 + 4) {\n      let ifd1Offset = view.getUint32(ifdOffset + 2 + numEntries * 12, littleEndian);\n      if (ifd1Offset !== 0) {\n        parsed.thumbnail = getTags(view, ifd1Offset, exifTagNameMap, littleEndian);\n      }\n    }\n  }\n  if (ifd0) {\n    if (ifd0.ExifOffset > 0) {\n      parsed.exif = getTags(view, ifd0.ExifOffset, exifTagNameMap, littleEndian);\n    }\n    if (ifd0.GPSInfo > 0) {\n      parsed.gps = getTags(view, ifd0.GPSInfo, gpsTagNameMap, littleEndian);\n    }\n    let interopOffset = ifd0.InteropOffset || parsed.exif?.InteropOffset;\n    if (interopOffset > 0) {\n      parsed.interop = getTags(view, interopOffset, exifTagNameMap, littleEndian);\n    }\n  }\n  // #endregion\n  return parsed;\n}\n\nexport function getTags(view, offset, tagNameMap, littleEndian = false) {\n  let end = view.byteLength;\n  if (offset + 2 > end) {\n    return null;\n  }\n  let tags = {};\n  let numEntries = view.getUint16(offset, littleEndian);\n  if (offset + 2 + numEntries * 12 > end) {\n    return null;\n  }\n  for (let i = 0, j = offset + 2, tag; i < numEntries; i++, j += 12) {\n    tag = view.getUint16(j, littleEndian);\n    let field = tagNameMap[tag] || tag.toString(16).toUpperCase().padStart(4, '0');\n    let value = view.getTag(j + 2, littleEndian);\n    tags[field] = value;\n  }\n  return tags;\n}\n\nconst TYPE_SIZE_LUT = [\n  0,\n  1, // 1: uint8\n  1, // 2: ascii char\n  2, // 3: uint16\n  4, // 4: uint32\n  8, // 5: unsigned rational\n  1, // 6: int8\n  1, // 7: undefined\n  2, // 8: int16\n  4, // 9: int32\n  8, // 10: signed rational\n  8, // 11: float32\n  8, // 12: float64\n];\n\nconst TYPE_ARRAY_LUT = [\n  null,\n  Uint8Array,  // 1: uint8\n  null,\n  Uint8Array,  // 3: uint16\n  Uint32Array, // 4: uint32\n  Float64Array, // 5: unsigned rational\n  Int8Array,  // 6: int8\n  null,\n  Int16Array,  // 8: int16\n  Int32Array,  // 9: int32\n  Float64Array, // 10: signed rational\n  Float32Array,  // 11: float32\n  Float64Array, // 12: float64\n];\n\nexport class TagDataView extends DataView {\n  getBinaryString(offset, length, strip = false) {\n    let a = new Uint8Array(super.buffer, super.byteOffset + offset, length);\n    if (strip) {\n      let lastIndex = a.length - 1;\n      while (lastIndex > -1) {\n        if (a[lastIndex] === 0) {\n          lastIndex--;\n        } else {\n          break;\n        }\n      }\n      return binaryDecoder.decode(a.subarray(0, lastIndex + 1));\n    }\n    return binaryDecoder.decode(a);\n  }\n  getTag(offset, littleEndian) {\n    let end = super.byteLength;\n    if (offset + 7 > end) {\n      return null;\n    }\n    let type = super.getUint16(offset, littleEndian);\n    // Exit early in case of unknown or bogus type\n    if (type === 0 || type > 10) {\n      console.warn('Unrecognized tag type: ' + type);\n      return null;\n    }\n    let valueSize = TYPE_SIZE_LUT[type] || 4; // bytes per element\n    let numValues = super.getUint32(offset + 2, littleEndian);\n    let payloadLength = valueSize * numValues;\n    let valueOffset;\n    if (payloadLength <= 4) {\n      valueOffset = offset + 6;\n    } else {\n      if (offset + 10 > end) {\n        return null;\n      }\n      valueOffset = super.getUint32(offset + 6, littleEndian);\n    }\n    if (type === 2) {\n      return this.getBinaryString(valueOffset, numValues, true).trimEnd();\n    } else if (type === 7) {\n      return new Uint8Array(super.buffer).slice(valueOffset, valueOffset + payloadLength);\n    } else {\n      if (offset + payloadLength > end) {\n        return null;\n      }\n      if (numValues === 1) {\n        return this.getTagValue(valueOffset, type, littleEndian);\n      } else {\n        let arr = new TYPE_ARRAY_LUT[type](numValues);\n        for (let i = 0; i < numValues && valueOffset < end; i++, valueOffset += valueSize) {\n          arr[i] = this.getTagValue(valueOffset, type, littleEndian);\n        }\n        return arr;\n      }\n    }\n  }\n  getTagValue(offset, type, littleEndian) {\n    switch (type) {\n      case 1: // uint8\n        return super.getUint8(offset);\n      case 3: // uint16\n        return super.getUint16(offset, littleEndian);\n      case 4: // uint32\n        return super.getUint32(offset, littleEndian);\n      case 5: // unsigned rational\n        return super.getUint32(offset, littleEndian) / super.getUint32(offset + 4, littleEndian);\n      case 6: // int8\n        return super.getInt8(offset);\n      case 8: // int16\n        return super.getInt16(offset, littleEndian);\n      case 9: // int32\n        return super.getInt32(offset, littleEndian);\n      case 10: // signed rational\n        return super.getInt32(offset, littleEndian) / super.getInt32(offset + 4, littleEndian);\n      case 11: // float32\n        return super.getFloat32(offset, littleEndian);\n      case 12: // float64\n        return super.getFloat64(offset, littleEndian);\n      default:\n        return null;\n    }\n  }\n}\n","/**\n * List of XMP tags (core, non-string)\n * found on https://exiftool.org/TagNames/XMP.html\n * Exif 2.3 metadata for XMP\n */\nexport const tagTypeMap = {\n  // #region Dublin Core\n  'dc:Date': 'Date[]',\n  // #endregion\n\n  // #region EXIF\n  'exif:DateTimeOriginal': 'Date',\n  'exif:ColorSpace': 'integer',\n  'exif:ExposureTime': 'rational',\n  'exif:FNumber': 'rational',\n  'exif:ExposureProgram': 'integer',\n  'exifEX:PhotographicSensitivity': 'integer',\n  'exifEX:SensitivityType': 'integer',\n  'exif:ISOSpeedRatings': 'integer',\n  'exifEX:StandardOutputSensitivity': 'integer',\n  'exifEX:ISOSpeed': 'integer',\n  'exifEX:ISOSpeedLatitudeyyy': 'integer',\n  'exifEX:ISOSpeedLatitudezzz': 'integer',\n  'exif:ShutterSpeedValue': 'rational',\n  'exif:ApertureValue': 'rational',\n  'exif:BrightnessValue': 'rational',\n  'exif:ExposureBiasValue': 'rational',\n  'exif:MaxApertureValue': 'rational',\n  'exif:SubjectDistance': 'rational',\n  'exif:MeteringMode': 'integer',\n  'exif:LightSource': 'integer',\n  'exif:FocalLength': 'rational',\n  'exif:SubjectArea': 'integer',\n  'exif:FlashEnergy': 'rational',\n  'exif:FocalPlaneXResolution': 'rational',\n  'exif:FocalPlaneYResolution': 'rational',\n  'exif:SubjectLocation': 'integer',\n  'exif:ExposureIndex': 'rational',\n  'exif:SensingMethod': 'integer',\n  'exif:FileSource': 'integer',\n  'exif:SceneType': 'integer',\n  'exif:CustomRendered': 'integer',\n  'exif:ExposureMode': 'integer',\n  'exif:WhiteBalance': 'integer',\n  'exif:DigitalZoomRatio': 'rational',\n  'exif:FocalLengthIn35mmFilm': 'integer',\n  'exif:SceneCaptureType': 'integer',\n  'exif:GainControl': 'integer',\n  'exif:Contrast': 'integer',\n  'exif:Saturation': 'integer',\n  'exif:Sharpness': 'integer',\n  'exif:DeviceSettingDescription': 'integer',\n  'exif:SubjectDistanceRange': 'integer',\n  'exifEX:LensSpecification': 'rational[]',\n  // GPS\n  'exif:GPSLatitude': 'GPSCoordinate',\n  'exif:GPSLongitude': 'GPSCoordinate',\n  'exif:GPSAltitudeRef': 'integer',\n  'exif:GPSAltitude': 'rational',\n  'exif:GPSTimeStamp': 'Date',\n  'exif:GPSMeasureMode': 'integer',\n  'exif:GPSDOP': 'rational',\n  'exif:GPSSpeed': 'rational',\n  'exif:GPSTrack': 'rational',\n  'exif:GPSImgDirection': 'rational',\n  'exif:GPSDestLatitude': 'GPSCoordinate',\n  'exif:GPSDestLongitude': 'GPSCoordinate',\n  'exif:GPSDestBearing': 'rational',\n  'exif:GPSDestDistance': 'rational',\n  'exif:GPSDifferential': 'integer',\n  'exifEX:GPSHPositioningError': 'rational',\n\n  'exifEX:Gamma': 'rational',\n  'exif:ComponentsConfiguration': 'integer',\n  'exif:CompressedBitsPerPixel': 'rational',\n  'exif:PixelXDimension': 'integer',\n  'exif:PixelYDimension': 'integer',\n\n  // Flash\n  'exif:Columns': 'integer',\n  'exif:Rows': 'integer',\n  'exif:Fired': 'boolean',\n  'exif:Function': 'boolean',\n  'exif:Mode': 'integer',\n  'exif:RedEyeMode': 'boolean',\n  'exif:Return': 'integer',\n  // #endregion\n\n  // #region TIFF\n  'tiff:ImageWidth': 'integer',\n  'tiff:ImageLength': 'integer',\n  'tiff:DateTime': 'Date',\n  'tiff:ImageHeight': 'integer', // called ImageLength by the spec\n  'tiff:BitsPerSample': 'integer',\n  'tiff:Compression': 'integer',\n  'tiff:PhotometricInterpretation': 'integer',\n  'tiff:Orientation': 'integer',\n  'tiff:SamplesPerPixel': 'integer',\n  'tiff:PlanarConfiguration': 'integer',\n  'tiff:YCbCrSubSampling': 'integer',\n  'tiff:YCbCrPositioning': 'integer',\n  'tiff:XResolution': 'rational',\n  'tiff:YResolution': 'rational',\n  'tiff:ResolutionUnit': 'integer',\n  'tiff:TransferFunction': 'integer',\n  'tiff:WhitePoint': 'rational[]',\n  'tiff:PrimaryChromaticities': 'rational[]',\n  'tiff:YCbCrCoefficients': 'rational[]',\n  'tiff:ReferenceBlackWhite': 'rational[]',\n  // #endregion\n\n  // #region XMP\n  'xmp:CreateDate': 'Date',\n  'xmp:MetadataDate': 'Date',\n  'xmp:ModifyDate': 'Date',\n  'xmp:PageImageHeight': 'integer',\n  'xmp:PageImagePageNumber': 'integer',\n  'xmp:PageImageWidth': 'integer',\n  'xmp:Rating': 'real',\n  'xmp:RatingPercent': 'real[]',\n  'xmp:ThumbnailHeight': 'integer',\n  'xmp:ThumbnailWidth': 'integer',\n  // PageInfo struct\n  'xmp:PageNumber': 'integer',\n  'xmp:Height': 'integer',\n  'xmp:Width': 'integer',\n  // #endregion\n\n  // #region XMP Dynamic Media\n  'xmpDM:AltTimecodeValue': 'integer',\n  'xmpDM:AudioModDate': 'Date',\n  'xmpDM:AudioSampleRate': 'integer',\n  'xmpDM:BeatSpliceParamsRiseInDecibel': 'real',\n  'xmpDM:BeatSpliceParamsRiseInTimeDurationScale': 'rational',\n  'xmpDM:BeatSpliceParamsRiseInTimeDurationValue': 'integer',\n  'xmpDM:BeatSpliceParamsUseFileBeatsMarker': 'boolean',\n  'xmpDM:ContributedMediaDurationScale': 'rational',\n  'xmpDM:ContributedMediaDurationValue': 'integer',\n  'xmpDM:ContributedMediaManaged': 'boolean',\n  'xmpDM:ContributedMediaStartTimeScale': 'rational',\n  'xmpDM:ContributedMediaStartTimeValue': 'integer',\n  'xmpDM:DurationScale': 'rational',\n  'xmpDM:DurationValue': 'integer',\n  'xmpDM:FileDataRate': 'rational',\n  'xmpDM:Good': 'boolean',\n  'xmpDM:IntroTimeScale': 'rational',\n  'xmpDM:IntroTimeValue': 'integer',\n  'xmpDM:Loop': 'boolean',\n  'xmpDM:MarkersProbability': 'real',\n  'xmpDM:MetadataModDate': 'Date',\n  'xmpDM:NumberOfBeats': 'real',\n  'xmpDM:OutCueScale': 'rational',\n  'xmpDM:OutCueValue': 'integer',\n  'xmpDM:PartOfCompilation': 'boolean',\n  'xmpDM:RelativeTimestampScale': 'rational',\n  'xmpDM:RelativeTimestampValue': 'integer',\n  'xmpDM:ReleaseDate': 'Date',\n  'xmpDM:ShotDate': 'Date',\n  'xmpDM:StartTimecodeValue': 'integer',\n  'xmpDM:StartTimeSampleSize': 'integer',\n  'xmpDM:TakeNumber': 'integer',\n  'xmpDM:Tempo': 'real',\n  'xmpDM:TimeScaleParamsFrameOverlappingPercentage': 'real',\n  'xmpDM:TimeScaleParamsFrameSize': 'real',\n  'xmpDM:TrackNumber': 'integer',\n  'xmpDM:TracksMarkersProbability': 'real',\n  'xmpDM:VideoAlphaPremultipleColorA': 'integer',\n  'xmpDM:VideoAlphaPremultipleColorB': 'integer',\n  'xmpDM:VideoAlphaPremultipleColorBlack': 'real',\n  'xmpDM:VideoAlphaPremultipleColorBlue': 'integer',\n  'xmpDM:VideoAlphaPremultipleColorCyan': 'real',\n  'xmpDM:VideoAlphaPremultipleColorGray': 'integer',\n  'xmpDM:VideoAlphaPremultipleColorGreen': 'integer',\n  'xmpDM:VideoAlphaPremultipleColorL': 'real',\n  'xmpDM:VideoAlphaPremultipleColorMagenta': 'real',\n  'xmpDM:VideoAlphaPremultipleColorRed': 'integer',\n  'xmpDM:VideoAlphaPremultipleColorTint': 'integer',\n  'xmpDM:VideoAlphaPremultipleColorYellow': 'real',\n  'xmpDM:VideoAlphaUnityIsTransparent': 'boolean',\n  'xmpDM:VideoFrameRate': 'real',\n  'xmpDM:VideoFrameSizeH': 'real',\n  'xmpDM:VideoFrameSizeW': 'real',\n  'xmpDM:VideoModDate': 'Date',\n  'xmpDM:VideoPixelAspectRatio': 'rational',\n  // BeatSpliceStretch Struct\n  'xmpDM:RiseInDecibel': 'real',\n  // 'xmpDM:RiseInTimeDuration': 'Time',\n  'xmpDM:Scale': 'rational',\n  'xmpDM:Value': 'integer',\n  'xmpDM:Managed': 'boolean',\n  'xmpDM:Probability': 'real',\n  'xmpDM:FrameOverlappingPercentage': 'real',\n  'xmpDM:FrameSize': 'real',\n  'xmpDM:A': 'integer',\n  'xmpDM:B': 'integer',\n  'xmpDM:L': 'real',\n  'xmpDM:Black': 'real',\n  'xmpDM:Blue': 'integer',\n  'xmpDM:Cyan': 'real',\n  'xmpDM:Gray': 'integer',\n  'xmpDM:Green': 'integer',\n  'xmpDM:Magenta': 'real',\n  'xmpDM:Red': 'integer',\n  'xmpDM:Tint': 'integer',\n  'xmpDM:Yellow': 'real',\n  'xmpDM:H': 'real',\n  'xmpDM:W': 'real',\n  // #endregion\n\n  // #region XMP Media Management\n  'xmpMM:DerivedFromLastModifyDate': 'Date',\n  'xmpMM:HistoryWhen': 'Date',\n  'xmpMM:IngredientsLastModifyDate': 'Date',\n  'xmpMM:ManagedFromLastModifyDate': 'Date',\n  'xmpMM:ManifestPlacedXResolution': 'real',\n  'xmpMM:ManifestPlacedYResolution': 'real',\n  'xmpMM:ManifestReferenceLastModifyDate': 'Date',\n  'xmpMM:RenditionOfLastModifyDate': 'Date',\n  'xmpMM:SaveID': 'integer',\n  'xmpMM:VersionsEventWhen': 'Date',\n  'xmpMM:VersionsModifyDate': 'Date',\n  // struct\n  'xmpMM:LastModifyDate': 'Date',\n  'xmpMM:ResourceEvent': 'Date',\n  // #endregion\n\n  // #region other XMP-related\n  'stEvt:when': 'Date',\n  'xmpRights:Marked': 'boolean',\n  'xmpTPg:ColorantA': 'integer',\n  'xmpTPg:ColorantB': 'integer',\n  'xmpTPg:ColorantBlack': 'real',\n  'xmpTPg:ColorantBlue': 'integer',\n  'xmpTPg:ColorantCyan': 'real',\n  'xmpTPg:ColorantGray': 'integer',\n  'xmpTPg:ColorantGreen': 'integer',\n  'xmpTPg:ColorantL': 'real',\n  'xmpTPg:ColorantMagenta': 'real',\n  'xmpTPg:ColorantRed': 'integer',\n  'xmpTPg:ColorantTint': 'integer',\n  'xmpTPg:ColorantYellow': 'real',\n  'xmpTPg:FontComposite': 'boolean',\n  'xmpTPg:HasVisibleOverprint': 'boolean',\n  'xmpTPg:HasVisibleTransparency': 'boolean',\n  'xmpTPg:MaxPageSizeH': 'real',\n  'xmpTPg:MaxPageSizeW': 'real',\n  'xmpTPg:NPages': 'integer',\n  'xmpTPg:SwatchColorantA': 'integer',\n  'xmpTPg:SwatchColorantB': 'integer',\n  'xmpTPg:SwatchColorantBlack': 'real',\n  'xmpTPg:SwatchColorantBlue': 'integer',\n  'xmpTPg:SwatchColorantCyan': 'real',\n  'xmpTPg:SwatchColorantGray': 'integer',\n  'xmpTPg:SwatchColorantGreen': 'integer',\n  'xmpTPg:SwatchColorantL': 'real',\n  'xmpTPg:SwatchColorantMagenta': 'real',\n  'xmpTPg:SwatchColorantRed': 'integer',\n  'xmpTPg:SwatchColorantTint': 'integer',\n  'xmpTPg:SwatchColorantYellow': 'real',\n  'xmpTPg:SwatchGroupType': 'integer',\n  // #endregion\n};\n","import {utf8Decoder} from './commons.js';\nimport {tagTypeMap} from './xmp-tags.js';\n\nconst rdfxmlns = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#';\n\n/**\n * @param {ArrayBuffer} buffer \n * @returns {Object}\n */\nexport function parse(buffer) {\n  let text;\n  if (buffer instanceof ArrayBuffer) {\n    text = utf8Decoder.decode(buffer);\n  } else if (typeof buffer === 'string') {\n    text = buffer;\n  } else {\n    throw new TypeError('param buffer can be either an ArrayBuffer or a string');\n  }\n  let parsed = {};\n  let parser = new DOMParser();\n  let doc = parser.parseFromString(text, 'text/xml');\n  {\n    let root = doc.documentElement;\n    let attr;\n    attr = root.getAttributeNodeNS('adobe:ns:meta/', 'xmptk');\n    if (attr) {\n      parsed[attr.prefix] = {\n        [attr.localName]: attr.value\n      };\n    }\n    attr = root.getAttributeNodeNS('http://ns.adobe.com/xmp/note/', 'HasExtendedXMP');\n    if (attr) {\n      parsed[attr.prefix] = {\n        [attr.localName]: attr.value\n      };\n    }\n  }\n  let rdfEl;\n  {\n    rdfEl = doc.getElementsByTagNameNS(rdfxmlns, 'RDF').item(0);\n    if (!rdfEl)\n      return parsed;\n  }\n  for (let descEl of rdfEl.children) {\n    if (descEl.localName !== 'Description') {\n      continue;\n    }\n    let rdf_about = descEl.getAttributeNS(rdfxmlns, 'about');\n    if (rdf_about !== '') { // skip non-empty subjects\n      continue;\n    }\n    // iterate over attributes\n    for (let attr of descEl.attributes) {\n      let {prefix, localName, value} = attr;\n      if (prefix.length === 0) {\n        continue;\n      } else if (prefix === 'xmlns') {\n        let group = parsed[localName];\n        if (!group) {\n          group = parsed[localName] = {};\n        }\n      } else {\n        let group = parsed[prefix];\n        if (!group) {\n          group = parsed[prefix] = {};\n        }\n        setProperty(group, attr.name, localName, value);\n      }\n    }\n    // walk through chidren\n    for (let tagEl of descEl.children) {\n      let {prefix, localName} = tagEl;\n      let group = parsed[prefix];\n      if (!group) {\n        continue;\n      }\n      let value = parseElementAsValue(tagEl);\n      setProperty(group, tagEl.nodeName, localName, value);\n    }\n  }\n  return parsed;\n}\nfunction parseNestedRDFDescription(descEl) {\n  let parsed = {};\n  // iterate over attributes\n  for (let attr of descEl.attributes) {\n    let {prefix, localName, value} = attr;\n    if (prefix.length === 0) {\n      continue;\n    } else if (prefix === 'xmlns') {\n      let group = parsed[localName];\n      if (!group) {\n        group = parsed[localName] = {};\n      }\n    } else {\n      let group = parsed[prefix];\n      if (!group) {\n        group = parsed[prefix] = {};\n      }\n      setProperty(group, attr.name, localName, value);\n    }\n  }\n  // walk through chidren\n  for (let tagEl of descEl.children) {\n    let {prefix, localName} = tagEl;\n    let group = parsed[prefix];\n    if (!group) {\n      continue;\n    }\n    let value = parseElementAsValue(tagEl);\n    setProperty(group, tagEl.nodeName, localName, value);\n  }\n  return parsed;\n}\nfunction setProperty(target, name, localName, value) {\n  let type = tagTypeMap[name];\n  if (type) {\n    let val = value;\n    switch (type) {\n      case 'integer':\n        val = parseInt(value);\n        break;\n      case 'boolean':\n        val = value.length === 4;\n        break;\n      case 'real':\n        val = Number(value);\n        break;\n      case 'rational':\n        val = parseRational(value);\n        break;\n      case 'integer[]':\n        val = value.map(Number);\n        break;\n      case 'boolean[]':\n        val = value.map((s) => s.length === 4);\n        break;\n      case 'rational[]':\n        val = value.map(parseRational);\n        break;\n      case 'real[]':\n        val = value.map(Number);\n        break;\n      case 'Date':\n        val = parseXMPDate(value);\n        break;\n      case 'Date[]':\n        val = value.map((s) => parseXMPDate(s));\n        break;\n      case 'GPSCoordinate':\n        val = parseGPSCoodinate(value);\n        break;\n      case 'base64':\n        val = parseBase64(value);\n        break;\n      default:\n        throw new Error('Unsupported type: ' + type + ' ' + value);\n    }\n    target[localName] = val;\n  } else {\n    target[localName] = value;\n  }\n}\nfunction parseXMPDate(str) {\n  if (str.charAt(10) === 'T') {\n    return new Date(str);\n  }\n  return new Date(str.replace(/^(\\d{4}):(\\d\\d):(\\d\\d) /, '$1-$2-$3T')); // (_, $1, $2, $3) => $1+'-'+$2+'-'+$3+'T')\n}\nfunction parseRational(str) {\n  let p = str.indexOf('/');\n  if (p === -1) {\n    return NaN;\n  } else {\n    return Number(str.slice(0, p)) / Number(str.slice(p + 1));\n  }\n}\nfunction parseBase64(data) {\n  let text = atob(data);\n  let array = new Uint8Array(text.length);\n  for (let i = 0, len = array.length; i < len; i++) {\n    array[i] = text.charCodeAt(i);\n  }\n  return array;\n}\nfunction parseGPSCoodinate(str) {\n  let m;\n  if ((m = str.match(/^(\\d+),(\\d+)[,.](\\d+)([NSWE])$/)) !== null) { // from text content\n    let deg = +m[1] + m[2] / 60 + m[3] / 3600;\n    switch (m[4]) {\n      case 'N':\n      case 'E':\n        break;\n      case 'S':\n      case 'W':\n        deg = -deg;\n        break;\n    }\n    return deg;\n  } else if ((m = str.match(/^(-?\\d+)\\/(\\d+) (-?\\d+)\\/(\\d+) (-?\\d+)\\/(\\d+)$/)) !== null) { // from attribute value\n    let deg = m[1] / m[2] + m[2] / m[3] / 60 + m[4] / m[5] / 3600; // FIXME need more samples\n    return deg;\n  } else {\n    throw new Error('Invalid GPSCoodinate: ' + str);\n  }\n}\nfunction parseElementAsValue(el) {\n  let {attributes, children} = el;\n  let firstEl;\n  if (children.length === 0) {\n    if (attributes.length === 0) {\n      return el.textContent;\n    } else {\n      return parseAttributesAsVaue(el);\n    }\n  } else if (children.length === 1 && (firstEl = el.firstElementChild).prefix === 'rdf') {\n    return parseRDFAsValue(firstEl, el);\n  } else { // 1+ children, 0+ attributes\n    let parseType = el.getAttributeNS(rdfxmlns, 'parseType');\n    if (parseType != null) {\n      switch (parseType) {\n        case 'Resource': {\n          return parseChildrenAsValue(el);\n        }\n        default:\n          console.warn('Unsupported parseType: ' + parseType);\n          return null;\n      }\n    } else {\n      console.warn('Expected parseType attribute on node ' + el.nodeName);\n      return null;\n    }\n  }\n}\nfunction parseRDFAsValue(rdfEl, contextEl) {\n  switch (rdfEl.localName) {\n    case 'Seq': {\n      let val = [];\n      for (let li of rdfEl.children) {\n        if (li.hasAttributes()) {\n          let lastAttr = li.attributes[li.attributes.length - 1];\n          if (li.getAttributeNS(rdfxmlns, 'parseType') === 'Resource') {\n            val.push(parseChildrenAsValue(li));\n          } else {\n            val.push(parseAttributesAsVaue(li, lastAttr.prefix));\n          }\n        } else if (li.childElementCount === 1) {\n          let childEl = li.children[0];\n          if (childEl.nodeName === 'rdf:Description') {\n            val.push(parseNestedRDFDescription(childEl));\n          } else {\n            val.push(parseElementAsValue(childEl));\n          }\n        } else {\n          val.push(li.textContent);\n        }\n      }\n      return val;\n    }\n    case 'Alt': {\n      let val;\n      for (let li of rdfEl.children) {\n        val = li.textContent;\n        break;\n      }\n      return val;\n    }\n    case 'Bag': {\n      let val = [];\n      for (let li of rdfEl.children) {\n        val = val.push(li.textContent);\n        break;\n      }\n      return val;\n    }\n    default:\n      console.warn('Unsupported child element: ' + rdfEl.nodeName);\n      return null;\n  }\n}\nfunction parseAttributesAsVaue(el, prefix = null) {\n  let group = {};\n  if (prefix) {\n    for (let attr of el.attributes) {\n      if (attr.prefix === prefix) {\n        setProperty(group, attr.name, attr.localName, attr.value);\n      }\n    }\n  } else {\n    for (let attr of el.attributes) {\n      if (attr.prefix !== 'rdf') {\n        setProperty(group, attr.name, attr.localName, attr.value);\n      }\n    }\n  }\n  return group;\n}\n\nfunction parseChildrenAsValue(el, prefix = null) {\n  let group = {};\n  if (prefix) {\n    for (let childEl of el.children) {\n      if (childEl.prefix === prefix) {\n        setProperty(group, childEl.nodeName, childEl.localName, parseElementAsValue(childEl));\n      }\n    }\n  } else {\n    for (let childEl of el.children) {\n      setProperty(group, childEl.nodeName, childEl.localName, parseElementAsValue(childEl));\n    }\n  }\n  return group;\n}\n\nexport function parseExtendedXMP(buffer) {\n  // TODO\n}\n","/**\n * List of ICC profiel tag names\n * https://www.color.org/specification/ICC.1-2022-05.pdf\n */\nexport const tagSignatureMap = {\n  'A2B0': 'AToB0',\n  'A2B1': 'AToB1',\n  'A2B2': 'AToB2',\n  'bXYZ': 'blueMatrixColumn',\n  'bTRC': 'blueTRC',\n  'B2A0': 'BToA0',\n  'B2A1': 'BToA1',\n  'B2A2': 'BToA2',\n  'B2D0': 'BToD0',\n  'B2D1': 'BToD1',\n  'B2D2': 'BToD2',\n  'B2D3': 'BToD3',\n  'calt': 'calibrationDateTime',\n  'targ': 'charTarget',\n  'chad': 'chromaticAdaptation',\n  'chrm': 'chromaticity',\n  'cicp': 'cipc',\n  'clro': 'colorantOrder',\n  'clrt': 'colorantTable',\n  'clot': 'colorantTableOut',\n  'ciis': 'colorimetricIntentImageState',\n  'cprt': 'copyright',\n  'crdi': 'creditInfo', // removed in v4\n  'data': 'data', // removed in v4\n  'dtim': 'dateTime', // removed in v4\n  'dmnd': 'deviceMfgDesc',\n  'dmdd': 'deviceModelDesc',\n  'devs': 'deviceSettings', // removed in v4\n  'D2B0': 'DToB0',\n  'D2B1': 'DToB1',\n  'D2B2': 'DToB2',\n  'D2B3': 'DToB3',\n  'gamt': 'gamut',\n  'kTRC': 'grayTRC',\n  'gXYZ': 'greenMatrixColumn',\n  'gTRC': 'greenTRC',\n  'lumi': 'luminance',\n  'meas': 'measurement',\n  'meta': 'metadata',\n  'bkpt': 'mediaBlackPoint', // removed in v4.4\n  'wtpt': 'mediaWhitePoint',\n  'ncol': 'namedColor', // obselete, use ncl2\n  'ncl2': 'namedColor2',\n  'resp': 'outputResponse',\n  'rig0': 'perceptualRenderingIntentGamut',\n  'pre0': 'preview0',\n  'pre1': 'preview1',\n  'pre2': 'preview2',\n  'desc': 'profileDescription',\n  'pseq': 'profileSequenceDesc',\n  'psd0': 'ps2CRD0', // removed in v4\n  'psd1': 'ps2CRD1', // removed in v4\n  'psd2': 'ps2CRD2', // removed in v4\n  'psd3': 'ps2CRD3', // removed in v4\n  'ps2s': 'ps2CSA', // removed in v4.4\n  'ps2i': 'ps2RenderingIntent', // removed in v4.4\n  'rXYZ': 'redMatrixColumn',\n  'rTRC': 'redTRC',\n  'rig2': 'saturationRenderingIntentGamut',\n  'scrd': 'screeningDesc', // removed in v4\n  'scrn': 'screening', // removed in v4\n  'tech': 'technology',\n  'bfd ': 'ucrBg', // removed in v4\n  'vued': 'viewingCondDesc',\n  'view': 'viewingConditions',\n};\n\nexport let tagParsers = {\n  // ====== v2 ======\n  // 6.5.17\n  'desc': function textDescription(view, offset, length) {\n    let asciiLength = view.getUint32(offset + 8);\n    let description = view.getBinaryString(offset + 12, asciiLength, true);\n    let j = offset + 12 + asciiLength;\n    let _languageCode = view.getUint32(j);\n    let unicodeLength = view.getUint32(j + 4);\n    let unicodeDescription = view.getUTF16BEString(j + 8, unicodeLength, true);\n    j += 4 + unicodeLength;\n    let _scriptCode = view.getUint16(j);\n    let localizedLength = view.getUint8(j + 2);\n    let localizedDescription = view.getBinaryString(j + 3, localizedLength, true);\n    // return {\n    //   description,\n    //   unicodeDescription,\n    //   localizedDescription,\n    //   languageCode,\n    //   scriptCode,\n    // };\n    return description || unicodeDescription || localizedDescription;\n  },\n  // ====== v4 ======\n  // 10.2\n  'chrm': function chromaticity(view, offset, length) {\n    let channelCount = view.getUint16(offset + 8);\n    let channels = [];\n    for (let i = 0, j = offset + 12; i < channelCount; i++, j += 8) {\n      let a = new Float64Array(2);\n      a[0] = view.getU16Fixed16Number(j);\n      a[1] = view.getU16Fixed16Number(j + 4);\n      channels.push(a);\n    }\n    return {\n      colorantType: view.getUint16(offset + 10),\n      channels,\n    };\n  },\n  // 10.3\n  'cipc': function cipc(view, offset, length) {\n    return {\n      colorPrimaries: view.getUint8(offset + 8),\n      transferCharacteristics: view.getUint8(offset + 8),\n      matrixCoefficients: view.getUint8(offset + 10),\n      videoFullRangeFlag: view.getUint8(offset + 11),\n    };\n  },\n  // 10.4\n  'clro': function colorantOrder(view, offset, length) {\n    let count = view.getUint32(offset + 8);\n    let order = new Uint8Array(count);\n    for (let i = 0, j = offset + 11; i < count; i++, j++) {\n      order[i] = view.getUint8(j);\n    }\n    return order;\n  },\n  // 10.5\n  'clrt': function colorantTable(view, offset, length) {\n    let colorantCount = view.getUint32(offset + 8);\n    let colorants = [];\n    for (let i = 0, j = offset + 12; i < colorantCount; i++, j += 38) {\n      let name = view.getBinaryString(j, 32, true);\n      let pcsValues = new Uint16Array(3);\n      pcsValues[0] = view.getUint16(j + 32);\n      pcsValues[1] = view.getUint16(j + 34);\n      pcsValues[2] = view.getUint16(j + 36);\n      colorants.push({colorantName: name, pcsValues});\n    }\n    return colorants;\n  },\n  // 10.6\n  'curv': function colorantTable(view, offset, length) {\n    let count = view.getUint32(offset + 8);\n    let array = new Uint16Array(count);\n    for (let i = 0, j = offset + 12; i < count; i++, j += 2) {\n      array[i] = view.getUint16(j);\n    }\n    return array;\n  },\n  // 10.7\n  'data': function data(view, offset, length) {\n    let dataType = view.getUint32(offset + 8);\n    if (dataType === 0) { // ascii text\n      return view.getBinaryString(offset + 12, length - 12);\n    }\n    return new Uint8Array(view.buffer, view.byteOffset, offset + 12, length - 12);\n  },\n  // 10.8\n  'dtim': function dateTime(view, offset, length) {\n    return view.getDateTimeNumber(offset + 8);\n  },\n  // 10.9\n  'dict': function dict(view, offset, length) {\n    let count = view.getDateTimeNumber(offset + 8);\n    let dict = [];\n    let recordSize = view.getUint32(offset + 12);\n    for (let i = 0, j = offset + 16; i < count; i++, j += recordSize) {\n      let namePos = view.getPositionNumber(j);\n      let valuePos = view.getPositionNumber(j + 8);\n      let name = view.getUTF16BEString(offset + namePos.offset, namePos.length);\n      let value = view.getUTF16BEString(offset + valuePos.offset, valuePos.length);\n      let entry = {name, value};\n      if (recordSize >= 24) {\n        let displayNamePos = view.getPositionNumber(j + 16);\n        entry.displayName = view.getUTF16BEString(offset + displayNamePos.offset, displayNamePos.length);\n        if (recordSize >= 32) {\n          let displayValuePos = view.getPositionNumber(j + 24);\n          entry.displayValue = view.getUTF16BEString(offset + displayValuePos.offset, displayValuePos.length);\n        }\n      }\n      dict.push(entry);\n    }\n    return dict;\n  },\n  // 10.10\n  'mft2': function lut16(view, offset, length) {\n    let numInputChannels = view.getUint8(offset + 8);\n    let numOutputChannels = view.getUint8(offset + 9);\n    let numGridPoints = view.getUint8(offset + 9);\n    let parameters = new Float64Array(9);\n    let j = offset + 12;\n    for (let i = 0; i < 9; i++, j += 2) {\n      parameters[i] = view.getS15Fixed16Number(j);\n    }\n    let numInputEntries = view.getUint16(offset + 48);\n    let numOutputEntries = view.getUint16(offset + 50);\n    let inputLength = numInputChannels * numInputEntries;\n    let inputTables = new Uint16Array(inputLength);\n    j = offset + 52;\n    for (let i = 0; i < inputLength; i++, j += 2) {\n      inputTables[i] = view.getUint16(j);\n    }\n    let clutLength = Math.pow(numGridPoints, numInputChannels) * numOutputChannels;\n    let clutTables = new Uint16Array(clutLength);\n    for (let i = 0; i < clutLength; i++, j += 2) {\n      clutTables[i] = view.getUint16(j);\n    }\n    let outputLength = numOutputChannels * numOutputEntries;\n    let outputTables = new Uint16Array(outputLength);\n    for (let i = 0; i < outputLength; i++, j += 2) {\n      outputTables[i] = view.getUint16(j);\n    }\n    return {\n      numInputChannels,\n      numOutputChannels,\n      numGridPoints,\n      numInputEntries,\n      numOutputEntries,\n      inputTables,\n      clutTables,\n      outputTables,\n    };\n  },\n  // 10.11\n  'mft1': function lut16(view, offset, length) {\n    let numInputChannels = view.getUint8(offset + 8);\n    let numOutputChannels = view.getUint8(offset + 9);\n    let numGridPoints = view.getUint8(offset + 9);\n    let parameters = new Float64Array(9);\n    let j = offset + 12;\n    for (let i = 0; i < 9; i++, j += 2) {\n      parameters[i] = view.getS15Fixed16Number(j);\n    }\n    let numInputEntries = 256;\n    let numOutputEntries = 256;\n    let inputLength = numInputChannels * numInputEntries;\n    let inputTables = new Uint8Array(inputLength);\n    j = offset + 52;\n    for (let i = 0; i < inputLength; i++, j++) {\n      inputTables[i] = view.getUint8(j);\n    }\n    let clutLength = Math.pow(numGridPoints, numInputChannels) * numOutputChannels;\n    let clutTables = new Uint8Array(clutLength);\n    for (let i = 0; i < clutLength; i++, j++) {\n      clutTables[i] = view.getUint8(j);\n    }\n    let outputLength = numOutputChannels * numOutputEntries;\n    let outputTables = new Uint8Array(outputLength);\n    for (let i = 0; i < outputLength; i++, j++) {\n      outputTables[i] = view.getUint8(j);\n    }\n    return {\n      numInputChannels,\n      numOutputChannels,\n      numGridPoints,\n      numInputEntries,\n      numOutputEntries,\n      inputTables,\n      clutTables,\n      outputTables,\n    };\n  },\n  // 10.12\n  'mAB ': null, // lutAToB\n  // 10.13\n  'mBA ': null, // lutBToA\n  // 10.14\n  'meas': function measurement(view, offset, length) {\n    return {\n      standardObserver: view.getUint32(offset + 8),\n      nCIEXYZ: view.getXYZNumber(offset + 12),\n      measurementGeometry: view.getUint32(offset + 24),\n      measurementFlare: view.getUint32(offset + 28),\n      standardIlluminant: view.getUint32(offset + 32),\n    };\n  },\n  // 10.15\n  'mluc': function multiLocalizedUnicode(view, offset, length) {\n    let numRecords = view.getUint32(offset + 8);\n    let recordSize = view.getUint32(offset + 12);\n    if (recordSize !== 12) {\n      throw new Error('Invalid mluc record size: ' + recordSize);\n    }\n    let records = [];\n    for (let i = 0, j = offset + 16; i < numRecords; i++, j += 12) {\n      let language = view.getBinaryString(j, 2, true);\n      let country = view.getBinaryString(j + 2, 2, true);\n      let textPos = {length: view.getUint32(j + 4), offset: view.getUint32(j + 8)};\n      let locale = country ? language + '-' + country : language;\n      records.push({\n        locale,\n        text: view.getUTF16BEString(offset + textPos.offset, textPos.length, true),\n      });\n    }\n    return records[0].text;\n  },\n  // 10.16\n  'mpet': null, // multiProcessElements\n  // 10.17\n  'ncl2': null, // namedColor2\n  // 10.18\n  'para': function parametricCurve(view, offset, length) {\n    let functionType = view.getUint16(offset + 8);\n    let count = (length - 12) / 4;\n    let parameters = new Float64Array(count);\n    for (let i = 0, j = offset + 12; i < count; i++, j += 4) {\n      parameters[i] = view.getS15Fixed16Number(offset + 12);\n    }\n    return {functionType, parameters};\n  },\n  // 10.19\n  'pseq': null, // profileSequenceDesc\n  // 10.20\n  'psid': null, // profileSequenceIdentifier\n  // 10.21\n  'rcs2': null, // responseCurveSet16\n  // 10.22\n  'sf32': function s15Fixed16Array(view, offset, length) {\n    let count = (length - 8) / 4;\n    let array = new Float64Array(count);\n    for (let i = 0, j = offset + 8; i < count; i++, j += 4) {\n      array[i] = view.getS15Fixed16Number(j);\n    }\n    return array;\n  },\n  // 10.23\n  'sig ': function signature(view, offset, length) {\n    return view.getBinaryString4(offset + 8);\n  },\n  // 10.24\n  'text': function text(view, offset, length) {\n    return view.getBinaryString(offset + 8, length - 8, true);\n  },\n  // 10.25\n  'uf32': function u16Fixed16Array(view, offset, length) {\n    let count = (length - 8) / 4;\n    let array = new Float64Array(count);\n    for (let i = 0, j = offset + 8; i < count; i++, j += 4) {\n      array[i] = view.getU16Fixed16Number(j);\n    }\n    return array;\n  },\n  // 10.26\n  'ui16': function uInt16Array(view, offset, length) {\n    let count = (length - 8) / 2;\n    let array = new Uint16Array(count);\n    for (let i = 0, j = offset + 8; i < count; i++, j += 2) {\n      array[i] = view.getUint16(j);\n    }\n    return array;\n  },\n  // 10.27\n  'ui32': function uInt32Array(view, offset, length) {\n    let count = (length - 8) / 4;\n    let array = new Uint32Array(count);\n    for (let i = 0, j = offset + 8; i < count; i++, j += 4) {\n      array[i] = view.getUint32(j);\n    }\n    return array;\n  },\n  // 10.28\n  'ui64': function uInt64Array(view, offset, length) {\n    let count = (length - 8) / 8;\n    let array = new BigUint64Array(count);\n    for (let i = 0, j = offset + 8; i < count; i++, j += 8) {\n      array[i] = view.getBigUint64(j);\n    }\n    return array;\n  },\n  // 10.29\n  'ui08': function uInt8Array(view, offset, length) {\n    let count = (length - 8);\n    let array = new Uint8Array(count);\n    for (let i = 0, j = offset + 8; i < count; i++, j += 1) {\n      array[i] = view.getUint8(j);\n    }\n    return array;\n  },\n  // 10.30\n  'view': function viewingConditions(view, offset, length) {\n    return {\n      illuminant: view.getXYZNumber(offset + 8),\n      surround: view.getXYZNumber(offset + 10),\n      illuminantType: tagParsers['meas'](view, offset + 32, length - 32)\n    };\n  },\n  // 10.31\n  'XYZ ': function viewingConditions(view, offset, length) {\n    return view.getXYZNumber(offset + 8);\n  },\n};\n","/**\n * ICC 4.4 parser\n * based on https://github.com/lovell/icc\n * derived from https://github.com/lovell/icc/blob/main/index.js\n */\n\n// Copyright 2015 Lovell Fuller and others.\n// SPDX-License-Identifier: Apache-2.0\n// http://www.color.org/profileheader.xalter\n\nimport {binaryDecoder, utf16beDecoder, toHexString} from './commons.js';\nimport {tagParsers, tagSignatureMap} from './icc-tags.js';\n\nexport function parse(buffer) {\n  let array = new Uint8Array(buffer);\n  let view = new TagDataView(buffer);\n  let parsed = {};\n  let len = view.getUint32(0);\n  if (len !== array.length) {\n    throw new Error(`Expected file length to be ${len} but got ${array.length}`);\n  }\n  let str = view.getBinaryString4(36);\n  const fileSignature = 'acsp';\n  if (str !== fileSignature) {\n    throw new Error(`Expected file signature \"${fileSignature}\" but got \"${str}\"`);\n  }\n\n  let headers = parsed.headers = {};\n  // Header\n  headers['cmm'] = view.getBinaryString4(4, true);\n  str = view.getUint32(8).toString(16).padStart(8, '0').slice(1, 3);\n  headers['profileVersion'] = str[0] + '.' + str[1];\n  headers['deviceClass'] = view.getBinaryString4(12);\n  headers['colorSpace'] = view.getBinaryString4(16).trimEnd();\n  headers['connectionSpace'] = view.getBinaryString4(20).trimEnd();\n  headers['createionDate'] = new Date(view.getDateTimeNumber(24));\n  headers['platform'] = view.getBinaryString4(40, true);\n  headers['flags'] = view.getUint32(44);\n  headers['manufacturer'] = view.getBinaryString4(48, true).trimEnd();\n  headers['model'] = view.getBinaryString4(52, true).trimEnd();\n  headers['media'] = (view.getUint32(56) << 32) + view.getUint32(60);\n  headers['intent'] = view.getUint32(64);\n  headers['illuminant'] = view.getXYZNumber(68);\n  headers['creator'] = view.getBinaryString4(80, true).trimEnd();\n  headers['id'] = toHexString(array.subarray(84, 100));\n  // 100~128 reverved\n\n  let tags = parsed.tags = {};\n  let tagCount = view.getUint32(128);\n  let offset = 132;\n  let tagTypeWarnings = {};\n  for (let i = 0; i < tagCount; i++) {\n    let tagSignature = view.getBinaryString4(offset);\n    let tagOffset = view.getUint32(offset + 4);\n    let tagSize = view.getUint32(offset + 8);\n    if (tagOffset + tagSize > array.length) {\n      throw new Error('Tag offset out of bounds');\n    }\n    let tagType = view.getBinaryString4(tagOffset);\n    let parser = tagParsers[tagType];\n    if (parser) {\n      let field = tagSignatureMap[tagSignature];\n      if (!field) {\n        field = tagSignature;\n      }\n      tags[field] = parser(view, tagOffset, tagSize);\n    } else if (parser === null) {\n      if (!tagTypeWarnings[tagType]) {\n        tagTypeWarnings[tagType] = true;\n        console.warn('Not implemented ICC tag type: ' + tagType);\n      }\n    } else {\n      if (!tagTypeWarnings[tagType]) {\n        tagTypeWarnings[tagType] = true;\n        console.warn('Unrecognized ICC tag type: ' + tagType);\n      }\n    }\n    offset = offset + 12;\n  }\n  return parsed;\n}\n\n// eslint-disable-next-line no-control-regex\nconst nullEnding = /\\x00\\x00*$/;\n\nclass TagDataView extends DataView {\n  getBinaryString4(offset, strip = false) {\n    let a = new Uint8Array(super.buffer, super.byteOffset + offset, 4);\n    if (strip) {\n      let s = '';\n      for (let i = 0; i < a.length; i++) {\n        if (a[i] === 0) {\n          break;\n        } else {\n          s += String.fromCharCode(a[i]);\n        }\n      }\n      return s;\n    }\n    return String.fromCharCode(a[0], a[1], a[2], a[3]);\n  }\n  getBinaryString(offset, length, strip = false) {\n    let a = new Uint8Array(super.buffer, super.byteOffset + offset, length);\n    if (strip) {\n      let lastIndex = a.length - 1;\n      while (lastIndex > -1) {\n        if (a[lastIndex] === 0) {\n          lastIndex--;\n        } else {\n          break;\n        }\n      }\n      return binaryDecoder.decode(a.subarray(0, lastIndex + 1));\n    }\n    return binaryDecoder.decode(a);\n  }\n  getUTF16BEString(offset, length, strip = false) {\n    let a = new Uint8Array(super.buffer, super.byteOffset + offset, length);\n    let s = utf16beDecoder.decode(a);\n    return strip ? s.replace(nullEnding, '') : s;\n  }\n  getDateTimeNumber(offset) {\n    return Date.UTC(super.getUint16(offset), super.getUint16(offset + 2) - 1, super.getUint16(offset + 4),\n      super.getUint16(offset + 6), super.getUint16(offset + 8), super.getUint16(offset + 10));\n  }\n  getPositionNumber(offset) {\n    return {offset: super.getUint32(offset), length: super.getUint32(offset + 4)};\n  }\n  getResponse16Number(offset) {\n    return {code: super.getUint16(offset), measurement: this.getS15Fixed16Number(offset)};\n  }\n  getS15Fixed16Number(offset) {\n    return super.getInt16(offset) + super.getUint16(offset + 2) / 65536;\n  }\n  getU16Fixed16Number(offset) {\n    return super.getUint16(offset) + super.getUint16(offset + 2) / 65536;\n  }\n  getU1Fixed15Number(offset) {\n    let n = super.getUint16(offset);\n    return (n >> 15) + (n & 0x8000) / 0x8000;\n  }\n  getU8Fixed8Number(offset) {\n    return super.getUint8(offset) + super.getUint8(offset + 1) / 256;\n  }\n  getXYZNumber(offset) {\n    let a = new Float64Array(3);\n    a[0] = this.getS15Fixed16Number(offset);\n    a[1] = this.getS15Fixed16Number(offset + 4);\n    a[2] = this.getS15Fixed16Number(offset + 8);\n    return a;\n  }\n}\n","export const tagTypeMap = {\n  // #region EnvelopeRecord\n  '1:0': {name: 'EnvelopeRecordVersion', type: 'uint16'},\n  '1:5': {name: 'Destination', type: 'string'},\n  '1:20': {name: 'FileFormat', type: 'uint16'},\n  '1:22': {name: 'FileVersion', type: 'uint16'},\n  '1:30': {name: 'ServiceIdentifier', type: 'string'},\n  '1:40': {name: 'EnvelopeNumber', type: 'digits'},\n  '1:50': {name: 'ProductID', type: 'string'},\n  '1:60': {name: 'EnvelopePriority', type: 'digits'},\n  '1:70': {name: 'DateSent', type: 'digits'},\n  '1:80': {name: 'TimeSent', type: 'string'},\n  '1:90': {name: 'CodedCharacterSet', type: 'string'},\n  '1:100': {name: 'UniqueObjectName', type: 'string'},\n  '1:120': {name: 'ARMIdentifier', type: 'uint16'},\n  '1:122': {name: 'ARMVersion', type: 'uint16'},\n  // #endregion\n\n  // #region ApplicationRecord\n  '2:0': {name: 'ApplicationRecordVersion', type: 'uint16'},\n  '2:3': {name: 'ObjectTypeReference', type: 'string'},\n  '2:4': {name: 'ObjectAttributeReference', type: 'string'},\n  '2:5': {name: 'ObjectName', type: 'string'},\n  '2:7': {name: 'EditStatus', type: 'string'},\n  '2:8': {name: 'EditorialUpdate', type: 'digits'},\n  '2:10': {name: 'Urgency', type: 'digits'},\n  '2:12': {name: 'SubjectReference', type: 'string'},\n  '2:15': {name: 'Category', type: 'string'},\n  '2:20': {name: 'SupplementalCategories', type: 'string'},\n  '2:22': {name: 'FixtureIdentifier', type: 'string'},\n  '2:25': {name: 'Keywords', type: 'string'},\n  '2:26': {name: 'ContentLocationCode', type: 'string'},\n  '2:27': {name: 'ContentLocationName', type: 'string'},\n  '2:30': {name: 'ReleaseDate', type: 'digits'},\n  '2:35': {name: 'ReleaseTime', type: 'string'},\n  '2:37': {name: 'ExpirationDate', type: 'digits'},\n  '2:38': {name: 'ExpirationTime', type: 'string'},\n  '2:40': {name: 'SpecialInstructions', type: 'string'},\n  '2:42': {name: 'ActionAdvised', type: 'digits'},\n  '2:45': {name: 'ReferenceService', type: 'string'},\n  '2:47': {name: 'ReferenceDate', type: 'digits'},\n  '2:50': {name: 'ReferenceNumber', type: 'digits'},\n  '2:55': {name: 'DateCreated', type: 'digits'},\n  '2:60': {name: 'TimeCreated', type: 'string'},\n  '2:62': {name: 'DigitalCreationDate', type: 'digits'},\n  '2:63': {name: 'DigitalCreationTime', type: 'string'},\n  '2:65': {name: 'OriginatingProgram', type: 'string'},\n  '2:70': {name: 'ProgramVersion', type: 'string'},\n  '2:75': {name: 'ObjectCycle', type: 'string'},\n  '2:80': {name: 'By-line', type: 'string'},\n  '2:85': {name: 'By-lineTitle', type: 'string'},\n  '2:90': {name: 'City', type: 'string'},\n  '2:92': {name: 'Sub-location', type: 'string'},\n  '2:95': {name: 'Province-State', type: 'string'},\n  '2:100': {name: 'Country-PrimaryLocationCode', type: 'string'},\n  '2:101': {name: 'Country-PrimaryLocationName', type: 'string'},\n  '2:103': {name: 'OriginalTransmissionReference', type: 'string'},\n  '2:105': {name: 'Headline', type: 'string'},\n  '2:110': {name: 'Credit', type: 'string'},\n  '2:115': {name: 'Source', type: 'string'},\n  '2:116': {name: 'CopyrightNotice', type: 'string'},\n  '2:118': {name: 'Contact', type: 'string'},\n  '2:120': {name: 'Caption-Abstract', type: 'string'},\n  '2:121': {name: 'LocalCaption', type: 'string'},\n  '2:122': {name: 'Writer-Editor', type: 'string'},\n  '2:125': {name: 'RasterizedCaption', type: 'undef'},\n  '2:130': {name: 'ImageType', type: 'string'},\n  '2:131': {name: 'ImageOrientation', type: 'string'},\n  '2:135': {name: 'LanguageIdentifier', type: 'string'},\n  '2:150': {name: 'AudioType', type: 'string'},\n  '2:151': {name: 'AudioSamplingRate', type: 'digits'},\n  '2:152': {name: 'AudioSamplingResolution', type: 'digits'},\n  '2:153': {name: 'AudioDuration', type: 'digits'},\n  '2:154': {name: 'AudioOutcue', type: 'string'},\n  '2:184': {name: 'JobID', type: 'string'},\n  '2:185': {name: 'MasterDocumentID', type: 'string'},\n  '2:186': {name: 'ShortDocumentID', type: 'string'},\n  '2:187': {name: 'UniqueDocumentID', type: 'string'},\n  '2:188': {name: 'OwnerID', type: 'string'},\n  '2:200': {name: 'ObjectPreviewFileFormat', type: 'uint16'},\n  '2:201': {name: 'ObjectPreviewFileVersion', type: 'uint16'},\n  '2:202': {name: 'ObjectPreviewData', type: 'undef'},\n  '2:221': {name: 'Prefs', type: 'string'},\n  '2:225': {name: 'ClassifyState', type: 'string'},\n  '2:228': {name: 'SimilarityIndex', type: 'string'},\n  '2:230': {name: 'DocumentNotes', type: 'string'},\n  '2:231': {name: 'DocumentHistory', type: 'string'},\n  '2:232': {name: 'ExifCameraInfo', type: 'string'},\n  '2:255': {name: 'CatalogSets', type: 'string'},\n  // #endregion\n\n  // #region NewsPhotoRecord\n  '3:0': {name: 'NewsPhotoVersion', type: 'uint16'},\n  '3:10': {name: 'IPTCPictureNumber', type: 'string'},\n  '3:20': {name: 'IPTCImageWidth', type: 'uint16'},\n  '3:30': {name: 'IPTCImageHeight', type: 'uint16'},\n  '3:40': {name: 'IPTCPixelWidth', type: 'uint16'},\n  '3:50': {name: 'IPTCPixelHeight', type: 'uint16'},\n  '3:55': {name: 'SupplementalType', type: 'uint8'},\n  '3:60': {name: 'ColorRepresentation', type: 'uint16'},\n  '3:64': {name: 'InterchangeColorSpace', type: 'uint8'},\n  '3:65': {name: 'ColorSequence', type: 'uint8'},\n  '3:66': {name: 'ICC_Profile', type: 'no'},\n  '3:70': {name: 'ColorCalibrationMatrix', type: 'no'},\n  '3:80': {name: 'LookupTable', type: 'no'},\n  '3:84': {name: 'NumIndexEntries', type: 'uint16'},\n  '3:85': {name: 'ColorPalette', type: 'no'},\n  '3:86': {name: 'IPTCBitsPerSample', type: 'uint8'},\n  '3:90': {name: 'SampleStructure', type: 'uint8'},\n  '3:100': {name: 'ScanningDirection', type: 'uint8'},\n  '3:102': {name: 'IPTCImageRotation', type: 'uint8'},\n  '3:110': {name: 'DataCompressionMethod', type: 'uint32'},\n  '3:120': {name: 'QuantizationMethod', type: 'uint8'},\n  '3:125': {name: 'EndPoints', type: 'no'},\n  '3:130': {name: 'ExcursionTolerance', type: 'uint8'},\n  '3:135': {name: 'BitsPerComponent', type: 'uint8'},\n  '3:140': {name: 'MaximumDensityRange', type: 'uint16'},\n  '3:145': {name: 'GammaCompensatedValue', type: 'uint16'},\n  // #endregion\n\n  // #region PreObjectData, ObjectData, PostObjectData\n  '7:10': {name: 'SizeMode', type: 'uint8'},\n  '7:20': {name: 'MaxSubfileSize', type: 'uint32'},\n  '7:90': {name: 'ObjectSizeAnnounced', type: 'no'},\n  '7:95': {name: 'MaximumObjectSize', type: 'no'},\n  '8:10': {name: 'SubFile', type: 'no'},\n  '9:10': {name: 'ConfirmedObjectSize', type: 'no'},\n  // #endregion\n};\n","import {binaryDecoder} from './commons.js';\nimport {tagTypeMap} from './iptc-tags.js';\n\nexport function parse(buffer) {\n  let parsed = {};\n  let iterable = {[Symbol.iterator]() { return findDatasets(buffer); }};\n  let view = new DataView(buffer);\n  for (let {recordNo, datasetNo, offset, length} of iterable) {\n    let recordName = recordNameMap[recordNo] || recordNo.toString();\n    let k = recordNo + ':' + datasetNo;\n    let info = tagTypeMap[k];\n    if (info) {\n      let {name, type} = info;\n      let record = parsed[recordName];\n      if (!record) {\n        record = parsed[recordName] = {};\n      }\n      let value;\n      switch (type) {\n        case 'string':\n        case 'digits':\n          value = binaryDecoder.decode(new Uint8Array(buffer, offset, length));\n          break;\n        case 'uint32':\n          if (length !== 4) {\n            throw new Error(`Unexpected length ${length} of type \"${type}\"`);\n          }\n          value = view.getUint32(offset);\n          break;\n        case 'uint16':\n          if (length !== 2) {\n            throw new Error(`Unexpected length ${length} of type \"${type}\"`);\n          }\n          value = view.getUint16(offset);\n          break;\n        case 'uint8':\n          if (length !== 1) {\n            throw new Error(`Unexpected length ${length} of type \"${type}\"`);\n          }\n          value = view.getUint8(offset);\n          break;\n        case 'undef':\n        case 'no':\n        default:\n          value = new Uint8Array(buffer, offset, length);\n          break;\n      }\n      record[name] = value;\n    }\n  }\n  return parsed;\n}\n\nconst recordNameMap = {\n  1: 'Envelope',\n  2: 'Application',\n  3: 'NewsPhoto',\n  7: 'PreObjectData',\n  8: 'ObjectData',\n  9: 'PostObjectData'\n};\n\nfunction* findDatasets(buffer) {\n  let view = new DataView(buffer);\n  let j = 0;\n  while (j < view.byteLength) {\n    let marker = view.getUint8(j);\n    if (marker !== 0x1C) {\n      throw new Error(`Expeted marker to be 0x1C but got 0x${marker.toString().padStart(2, '0')}`);\n    }\n    let recordNo = view.getUint8(j + 1);\n    let datasetNo = view.getUint8(j + 2);\n    let dataLength = view.getUint16(j + 3);\n    if (dataLength < 32768) {\n      yield {recordNo, datasetNo, offset: j + 5, length: dataLength};\n    } else {\n      // TODO\n    }\n    j += 5 + dataLength;\n  }\n}\n","import {startsWithArray} from './commons.js';\n\nexport default {\n  getModifyDate(parsed) {\n    let {tiff, exif} = parsed;\n    if (tiff.ModifyDate) {\n      return parseEXIFDate(tiff.ModifyDate, exif?.SubSecTime, exif?.OffsetTime);\n    }\n    return null;\n  },\n  getDateTimeOriginal(parsed) {\n    let {exif} = parsed;\n    if (exif?.DateTimeOriginal) {\n      return parseEXIFDate(exif.DateTimeOriginal, exif.SubSecTimeOriginal,\n        exif.OffsetTimeOriginal);\n    }\n    return null;\n  },\n  getDateTimeDigitized(parsed) {\n    let {exif} = parsed;\n    if (exif?.DateTimeDigitized) {\n      return parseEXIFDate(exif.DateTimeDigitized, exif.SubSecTimeDigitized,\n        exif.OffsetTimeDigitized);\n    }\n    return null;\n  },\n  getThumbnail(parsed, content) {\n    let array = new Uint8Array(content);\n    let {thumbnail: t} = parsed;\n    if (!t || t.ThumbnailLength === 0) {\n      return null;\n    }\n    let {ThumbnailOffset: offset, ThumbnailLength: length} = t;\n    let type = '';\n    if (startsWithArray(array, [0xFF, 0xD8], offset)) {\n      type = 'image/jpeg';\n    } else if (startsWithArray(array, [0x89, 0x50, 0x4E, 0x47], offset)) {\n      type = 'image/png';\n    }\n    return new Blob([array.subarray(offset, offset + length)], {type});\n  },\n  /**\n   * @param {Object} gps \n   * @returns {Date}\n   */\n  getGPSTimeStamp(gps) {\n    if (gps && gps.GPSDateStamp && gps.GPSTimeStamp) {\n      let d = gps.GPSDateStamp.split(':').map(parseFloat);\n      let t = gps.GPSTimeStamp;\n      return new Date(Date.UTC(d[0], d[1] - 1, d[2], t[0], t[1], Math.floor(t[2]), t[2] % 1 * 1000));\n    }\n    return null;\n  },\n  /**\n   * @param {Object} parsed \n   * @returns {GeolocationCoordinates}\n   */\n  getGPSCoords(gps) {\n    if (gps && 'GPSLongitude' in gps && 'GPSLatitude' in gps) {\n      let obj = {};\n      obj.longitude = toDegree(gps.GPSLongitude, gps.GPSLongitudeRef);\n      obj.latitude = toDegree(gps.GPSLatitude, gps.GPSLatitudeRef);\n      if ('GPSAltitude' in gps) {\n        obj.altitude = toAltitude(gps.GPSAltitude, gps.GPSAltitudeRef);\n      }\n      if ('GPSHPositioningError' in gps) {\n        obj.accuracy = gps.GPSHPositioningError;\n      }\n      if ('GPSImgDirection' in gps) {\n        obj.heading = toImgDirection(gps.GPSImgDirection, gps.GPSImgDirectionRef);\n      }\n      if ('GPSSpeed' in gps) {\n        obj.speed = toSpeed(gps.GPSAltitude, gps.GPSAltitudeRef);\n      }\n      return obj;\n    }\n    return null;\n  },\n};\n/**\n * @param {string} str - like \"2023:06:13 15:28:01\" or \"2023:06:13 15:28:01.487+08:00\"\n * @param {string} [subSec]\n * @param {string} [timeOffset] \n * @returns {Date}\n */\nfunction parseEXIFDate(str, subSec = undefined, timeOffset = undefined) {\n  let s = str.slice(0, 10).split(':').join('-') + 'T' + str.slice(11);\n  if (str.length < 29) {\n    s = s.slice(0, 19); \n    if (subSec) {\n      s += '.' + (subSec.length === 3 ? subSec : subSec.slice(0, 3));\n    }\n    if (timeOffset) {\n      s += timeOffset;\n    }\n  }\n  return new Date(s);\n}\n/**\n * @param {Array<number>} a \n * @param {string} ref \n * @returns {degree in WGS84 datum}\n */\nfunction toDegree(a, ref) {\n  let deg = a[0] + a[1] / 60 + a[2] / 3600;\n  switch (ref) {\n    case 'N':\n    case 'E':\n      return deg;\n    case 'S':\n    case 'W':\n      return -deg;\n    default:\n      return deg;\n  }\n}\n/**\n * @param {number} n \n * @param {string} ref \n * @returns {number} height above sea level\n */\nfunction toAltitude(n, ref) {\n  return (ref === 1) ? -n : n;\n}\n/**\n * @param {number} n \n * @param {string} ref \n * @returns {number} speed in km/h\n */\nfunction toSpeed(n, ref) {\n  switch (ref) {\n    case 'K': return n;\n    case 'M': return n * 1.609344; // convert mph to km/h\n    case 'N': return n * 1.852; // convert knots to km/h\n    default: return n;\n  }\n}\nfunction toImgDirection(n, ref) {\n  switch (ref) {\n    case 'T': return n;\n    case 'M': return n; // FIXME\n    default: return n;\n  }\n}\n","export default {\n\n};\n","import {extname, startsWithArray, binaryDecoder} from './commons.js';\n\nimport {readFile as readJPEGFile} from './jpeg-reader.js';\nimport {readFile as readPNGFile} from './png-reader.js';\nimport {readFile as readWEBPFile} from './webp-reader.js';\nimport {readFile as readAVIFFile} from './avif-reader.js';\nimport {readFile as readSVGFile} from './svg-reader.js';\n\nimport {parse as parseJFIF, parseJFXX} from './jfif-parser.js';\nimport {parse as parseEXIF} from './exif-parser.js';\nimport {parse as parseXMP}  from './xmp-parser.js';\nimport {parse as parseICC} from './icc-parser.js';\nimport {parse as parseIPTC} from './iptc-parser.js';\n\nexport {readJPEGFile, readPNGFile, readWEBPFile, readAVIFFile, readSVGFile};\nexport {parseEXIF, parseXMP, parseICC};\n\nexport {default as exifHelpers} from './exif-helpers.js';\nexport {default as xmpHelpers} from './xmp-helpers.js';\n\n/* expose common utilities, tag registries for extensibility */\nexport * as commons from './commons.js';\nexport {tagNameMap as exifTagNameMap} from './exif-tags.js';\nexport {tagTypeMap as xmpTagTypeMap} from './xmp-tags.js';\n\n/**\n * @typedef Metadata\n * @type {Object}\n * @property {ArrayBuffer} content\n * @property {Object} parsed\n */\n/**\n * @typedef ReadResult\n * @type {Object}\n * @property {Metadata} INFO - always present\n * @property {Metadata} EXIF\n * @property {Metadata} XMP\n * @property {Metadata} ICC\n * @property {Metadata} ExtendedXMP - JPEG-only\n * @property {Metadata} IPTC - JPEG-only\n * @property {Metadata} JFIF - JPEG-only\n */\n\n/**\n * @param {Blob} file \n * @returns {ReadResult}\n */\nexport async function readFile(file) {\n  let {type} = file;\n  if (!type) {\n    type = getFileTypeByName(file.name);\n    if (!type) {\n      type = imageContentSniff(await file.slice(0, 40).arrayBuffer());\n    }\n  }\n  switch (type) {\n    case 'image/jpeg':\n      return readJPEGFile(file);\n    case 'image/png':\n    case 'image/apng':\n      return readPNGFile(file);\n    case 'image/webp':\n      return readWEBPFile(file);\n    case 'image/avif':\n    case 'image/heif':\n    case 'image/heic':\n    case 'image/avif-sequence': // still support it\n    case 'image/heif-sequence':\n    case 'image/heic-sequence':\n      return readAVIFFile(file);\n    case 'image/svg+xml':\n      return readSVGFile(file);\n    default:\n      throw new Error(`Unsupported file type: ${file.type}`);\n  }\n}\n\n/**\n * process extracted metadata content\n * @param {ReadResult} result\n * @returns {ReadResult}\n */\nexport function parseResult(result) {\n  if (!result)\n    return result;\n  let {INFO, JFIF, EXIF, XMP, IPTC, ICC} = result;\n  if (JFIF) {\n    JFIF.parsed = parseJFIF(JFIF.content);\n    let {JFXX} = result;\n    if (JFXX) {\n      JFXX.parsed = parseJFXX(JFXX.content);\n    }\n  }\n  if (EXIF) {\n    EXIF.parsed = parseEXIF(EXIF.content);\n    let o;\n    if (INFO && !('rotation' in INFO.parsed && 'mirror' in INFO.parsed) && (o = EXIF.parsed.tiff?.Orientation) !== undefined) {\n      Object.assign(INFO.parsed, parseOrientation(o));\n    }\n  }\n  if (XMP) {\n    XMP.parsed = parseXMP(XMP.content);\n    let {ExtendedXMP} = result;\n    if (ExtendedXMP) {\n      ExtendedXMP.parsed = parseXMP(ExtendedXMP.content);\n    }\n  }\n  if (IPTC) {\n    IPTC.parsed = parseIPTC(IPTC.content);\n  }\n  if (ICC) {\n    ICC.parsed = parseICC(ICC.content);\n  }\n  return result;\n}\nfunction parseOrientation(orientation) {\n  let rotation = 0;\n  let mirror = 0;\n  switch (orientation) {\n    case 1: rotation = 0; break; // Horizontal (normal)\n    case 2: mirror = 1; break; // Mirror horizontal\n    case 3: rotation = 180; break; // Rotate 180\n    case 4: mirror = 0; break; // Mirror vertical\n    case 5: mirror = 1; rotation = 270; break; // Mirror horizontal and rotate 270 CW\n    case 6: rotation = 90; break; // Rotate 90 CW\n    case 7: mirror = 1; rotation = 90; break; // Mirror horizontal and rotate 90 CW\n    case 8: rotation = 270; break; // Rotate 270 CW\n  }\n  return {rotation, mirror};\n}\n\nconst supportedImageTypes = [\n  'image/jpeg',\n  'image/png',\n  'image/apng',\n  'image/webp',\n  'image/avif',\n  'image/avif-sequence',\n  'image/heif',\n  'image/heif-sequence',\n  'image/heic',\n  'image/heic-sequence',\n  'image/svg',\n];\nexport let getFileTypeByName = (name) => {\n  let type;\n  let ext = extname(name || '').toLowerCase();\n  switch (ext) {\n    case '.jpg':\n    case '.jpeg': type = 'image/jpeg'; break;\n    case '.png': type = 'image/png'; break;\n    case '.apng': type = 'image/apng'; break;\n    case '.webp': type = 'image/webp'; break;\n    case '.avif':\n    case '.avifs': type = 'image/avif'; break;\n    case '.heif': type = 'image/heif'; break;\n    case '.heifs': type = 'image/heif-sequence'; break;\n    case '.heic': type = 'image/heic'; break;\n    case '.heics': type = 'image/heic-sequence'; break;\n    case '.jxl': type = 'image/jxl'; break;\n    case '.svg': type = 'image/svg+xml'; break;\n  }\n  return type;\n};\n/**\n * @param {File} file \n * @returns {boolean}\n */\nexport function isSupportedImageFile(file) {\n  return supportedImageTypes.includes(file.type || getFileTypeByName(file.name));\n}\nexport function isSupportedSidecarFile(file) {\n  switch (file.type) {\n    case 'application/vnd.iccprofile':\n    case 'application/rdf+xml': return true;\n  }\n  let ext = extname(file.name).toLowerCase();\n  if (/\\.(exi?f|xmp|rdf|ic[cm])$/.test(ext)) {\n    return true;\n  }\n  return false;\n}\n\nconst MagicNum = {\n  JPEG: [0xFF, 0xD8, 0xFF],\n  PNG: [0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A],\n  WEBP: [0x52, 0x49, 0x46, 0x46],\n  WEBP8: [0x57, 0x45, 0x42, 0x50], // offset at 8\n  BMFF4: [0x66, 0x74, 0x79, 0x70], // offset at 4\n  JXL: [0x00, 0x00, 0x00, 0x0C, 0x4A, 0x58, 0x4C, 0x20, 0x0D, 0x0A, 0x87, 0x0A],\n  JXL_RAW: [0xFF, 0x0A],\n  EXIF: [0x49, 0x49, 0x2A, 0x00],\n  EXIF_ALT: [0x4D, 0x4D, 0x00, 0x2A],\n  XMP: [0x3c, 0x3f, 0x78, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74],\n  XMP_ALT: [0x3c, 0x78, 0x3a, 0x78, 0x6d, 0x70, 0x6d, 0x65, 0x74, 0x61],\n  ICC34: [0x61, 0x63, 0x73, 0x70],\n};\n/**\n * @param {Blob} file \n * @returns {string}\n */\nexport async function imageContentSniff(input) {\n  let array;\n  if (input instanceof ArrayBuffer) {\n    array = new Uint8Array(input);\n  } else if (ArrayBuffer.isView(input)) {\n    array = new Uint8Array(input.buffer, input.byteOffset, input.byteLength);\n  } else {\n    throw new TypeError('Unsupported input');\n  }\n  if (startsWithArray(array, MagicNum.JPEG)) {\n    return 'image/jpeg';\n  } else if (startsWithArray(array, MagicNum.PNG)) {\n    return 'image/png';\n  } else if (startsWithArray(array, MagicNum.WEBP, 0) && startsWithArray(array, MagicNum.WEBP8, 8)) {\n    return 'image/webp';\n  } else if (startsWithArray(array, MagicNum.BMFF4, 4)) {\n    let brand = binaryDecoder.decode(array.subarray(8, 12));\n    switch (brand) {\n      case 'avif':\n      case 'avis': return 'image/avif';\n      case 'mif1': return 'image/heif';\n      case 'msf1': return 'image/heif-sequence';\n      case 'heic':\n      case 'heix': return 'image/heic';\n      case 'hevc':\n      case 'hevx': return 'image/heic-sequence';\n    }\n  } else if (startsWithArray(array, MagicNum.JXL) || startsWithArray(array, MagicNum.JXL_RAW)) {\n    return 'image/jxl';\n  }\n  return null;\n}\n\n/**\n * @param {Blob} file \n * @returns {string}\n */\nexport async function sidecarContentSniff(input) {\n  let array;\n  if (input instanceof ArrayBuffer) {\n    array = new Uint8Array(input);\n  } else if (ArrayBuffer.isView(input)) {\n    array = new Uint8Array(input.buffer, input.byteOffset, input.byteLength);\n  } else {\n    throw new TypeError('Unsupported input');\n  }\n  if (startsWithArray(array, MagicNum.EXIF) || startsWithArray(array, MagicNum.EXIF_ALT)) {\n    return 'application';\n  } else if (startsWithArray(array, MagicNum.PNG)) {\n    return 'image/png';\n  } else if (startsWithArray(array, MagicNum.WEBP, 0) && startsWithArray(array, MagicNum.WEBP8, 8)) {\n    return 'image/webp';\n  } else if (startsWithArray(array, MagicNum.BMFF4, 4)) {\n    let brand = binaryDecoder.decode(array.subarray(8, 12));\n    switch (brand) {\n      case 'avif':\n      case 'avis': return 'image/avif';\n      case 'mif1': return 'image/heif';\n      case 'msf1': return 'image/heif-sequence';\n      case 'heic':\n      case 'heix': return 'image/heic';\n      case 'hevc':\n      case 'hevx': return 'image/heic-sequence';\n    }\n  } else if (startsWithArray(array, MagicNum.JXL) || startsWithArray(array, MagicNum.JXL_RAW)) {\n    return 'image/jxl';\n  }\n  return null;\n}\n","export function parse(buffer, offset = 0) {\n  let array = new Uint8Array(buffer, offset);\n  let view = new DataView(buffer, offset);\n  let parsed = {\n    JFIFVersion: [view.getUint8(0), view.getUint8(1)],\n    DensityUints: view.getUint8(2),\n    Xdensity: view.getUint16(3),\n    Ydensity: view.getUint16(5),\n    Xthumbnail: view.getUint8(7),\n    Ythumbnail: view.getUint8(8),\n  };\n  let start = 9;\n  parsed.ThumbnailData = start < array.length ? array.slice(9).buffer : new ArrayBuffer(0);\n  return parsed;\n}\n\nexport function parseJFXX(buffer, offset = 0) {\n  let array = new Uint8Array(buffer, offset);\n  let view = new DataView(buffer, offset);\n  \n  let format = view.getUint8(0);\n  let parsed = {\n    ThumbnailFormat: format\n  };\n  let start;\n  switch (format) {\n    case 0x10: // JPEG encoding\n      start = 1;\n      break;\n    case 0x11: // one byte per pixel\n      parsed.Xthumbnail = view.getUint8(1);\n      parsed.Ythumbnail = view.getUint8(2);\n      parsed.ThumbnailPalette = array.slice(3, 771);\n      start = 771;\n      break;\n    case 0x13: // three byte per pixel\n      parsed.Xthumbnail = view.getUint8(1);\n      parsed.Ythumbnail = view.getUint8(2);\n      start = 3;\n      break;\n    default:\n      console.warn('Unexpected thumbnail format: ' + format);\n      return null;\n  }\n  parsed.ThumbnailData = start < array.length ? array.slice(start).buffer : new ArrayBuffer(0);\n  return parsed;\n}\n"],"names":["utf8Encoder","TextEncoder","utf8Decoder","TextDecoder","binaryDecoder","utf16beDecoder","startsWithArray","array","search","position","end","length","i","j","indexBy","arr","field","map","e","toHexString","str","s","toString","extname","pos","lastIndexOf","slice","async","decompress","chunks","format","writableSink","BufferedWritableSink","ReadableStream","BufferedReadableSink","pipeThrough","DecompressionStream","pipeTo","WritableStream","concatArrays","sources","total","source","Uint8Array","Error","Object","prototype","call","offset","set","constructor","Array","isArray","this","iterator","Symbol","pull","controller","done","value","next","close","enqueue","byteWritten","write","chunk","push","ext","name","endsWith","CompressionStream","len","parseInt","start","search0","searchLeading","k","CHUNK_SIZE","jfifIdentifier","encode","jfxxIdentifier","exifIdentifier","xmpIdentifier","exmpIdentifier","iccIdentifier","iptcIdentifier","mjpgIdentifier","SOF","progressiveMarkers","losslessMarkers","readFile","file","result","info","alpha","lossless","progressive","animation","flags","obj","asyncIterator","chunkSize","fileSize","size","buffer","Math","min","arrayBuffer","fileOffset","byteLength","view","DataView","seg","readNextSegment","marker","arrayOffset","ensureBufferSize","minSize","newBuffer","newArray","data","dataLength","subarray","findJPEGSegments","exmpChunks","iccChunks","JFIF","content","JFXX","EXIF","XMP","toExtendedXMPChunk","toICCChunk","iterable","findImageResourceBlocks","iptcBlock","seekIPTCBlock","block","resId","IPTC","includes","byteOffset","bitDepth","getUint8","width","getUint16","lines","height","INFO","parsed","fullLength","sort","a","b","sign","console","warn","mergeExtendedXMPChunks","ExtendedXMP","expected","actual","number","totalLength","mergeICCChunks","ICC","guid","decode","getUint32","toUpperCase","padStart","b1","signature","nameLength","n","dataSize","pngMagicNumber","colorInfo","PNGDataView","getChunk","type","findPNGChunks","findChunks","byteLngeht","keyword","compressionFlag","compressionMethod","text","readITXT","creationTime","Date","getTime","g","findNullSeparatedStrings","bytesRead","_profileName","colorSpace","renderingIntent","toDataView","colorPrimaries","transferFunction","matrixCoefficients","videoFullRangeFlag","whitePointX","whitePointY","redPrimaryX","redPrimaryY","greenPrimaryX","greenPrimaryY","bluePrimaryX","bluePrimaryY","gamma","maximumLuminance","minimumLuminance","maxContentLightLevel","maxFrameAverageLightLevel","d","setFullYear","setMonth","setDate","setHours","setMinutes","setSeconds","modificationTime","indexOf","compressonFlag","compressonMethod","languageTag","translatedKeyword","getBinaryString","strip","super","lastIndex","crc","RIFFDataView","features","undefined","AVIF_BRANDS","HEIF_BRANDS","HEIC_BRANDS","BMFFDataView","ftypBox","getFileTypeBox","brand","major_brand","metaBox","searchBoxes","box","getBox","Box","getMetaBox","metaObj","subBoxes","iinf","iprp","item","pItemID","pitm","item_ID","pItem","items_infos","find","grid","item_type","getItemData","item_name","content_type","ipco","colour_type","ICC_profile","channels","bit_depth","rotation","mirror","time","metaInfo","itemInfo","iloc","loc","items","version","extent","extents","base_offset","extent_offset","extent_length","num","construction_method","rSignature","boxtype","largesize","Number","getBigUint64","usertype","test","cur","getFullBox","initBox","FileTypeBox","minor_version","count","floor","compatible_brands","getHandlerBox","getPrimaryItemBox","getItemLocationBox","getItemInfoBox","getItemReferenceBox","getItemPropertiesBox","getItemDataBox","pre_defined","handler_type","bits","offset_size","length_size","base_offset_size","index_size","reserved","item_count","data_reference_index","extent_count","extent_index","getSingleItemTypeReferenceBox","SingleItemTypeReferenceBox","from_item_ID","reference_count","to_item_ID","Uint16Array","getSingleItemTypeReferenceBoxLarge","SingleItemTypeReferenceBoxLarge","Uint32Array","references","subBox","getItemInfoEntry","ItemInfoEntry","item_protection_index","content_encoding","extension_type","content_location","content_MD5","content_length","transfer_length","entry_count","getBigUint8","group_ids","item_uri_type","getItemPropertyContainerBox","entries","getImageSpacialExtent","getPixelInformation","getColourInformationBox","getTimeInformationBox","getImageRotation","getImageMirror","entry","getItemPropertyAssociation","colour_primaries","transfer_characteristics","matrix_coefficients","full_range_flag","getCleanAperture","FullBox","xmpText","doc","DOMParser","parseFromString","documentElement","root","getAttribute","m","exec","tagNameMap","gpsTagNameMap","parse","TagDataView","littleEndian","byteOrderMark","ifdOffset","ifd0","getTags","exifTagNameMap","tiff","numEntries","ifd1Offset","thumbnail","ExifOffset","exif","GPSInfo","gps","interopOffset","InteropOffset","interop","tags","tag","getTag","TYPE_SIZE_LUT","TYPE_ARRAY_LUT","Float64Array","Int8Array","Int16Array","Int32Array","Float32Array","valueOffset","valueSize","numValues","payloadLength","trimEnd","getTagValue","getInt8","getInt16","getInt32","getFloat32","getFloat64","tagTypeMap","rdfxmlns","ArrayBuffer","TypeError","rdfEl","attr","getAttributeNodeNS","prefix","localName","getElementsByTagNameNS","descEl","children","getAttributeNS","attributes","group","setProperty","tagEl","parseElementAsValue","nodeName","parseNestedRDFDescription","target","val","parseRational","parseXMPDate","match","deg","parseGPSCoodinate","atob","charCodeAt","parseBase64","charAt","replace","p","NaN","el","firstEl","textContent","parseAttributesAsVaue","firstElementChild","contextEl","li","hasAttributes","lastAttr","parseChildrenAsValue","childElementCount","childEl","parseRDFAsValue","parseType","tagSignatureMap","A2B0","A2B1","A2B2","bXYZ","bTRC","B2A0","B2A1","B2A2","B2D0","B2D1","B2D2","B2D3","calt","targ","chad","chrm","cicp","clro","clrt","clot","ciis","cprt","crdi","dtim","dmnd","dmdd","devs","D2B0","D2B1","D2B2","D2B3","gamt","kTRC","gXYZ","gTRC","lumi","meas","meta","bkpt","wtpt","ncol","ncl2","resp","rig0","pre0","pre1","pre2","desc","pseq","psd0","psd1","psd2","psd3","ps2s","ps2i","rXYZ","rTRC","rig2","scrd","scrn","tech","vued","tagParsers","asciiLength","description","unicodeLength","unicodeDescription","getUTF16BEString","localizedLength","localizedDescription","channelCount","getU16Fixed16Number","colorantType","cipc","transferCharacteristics","order","colorantCount","colorants","pcsValues","colorantName","curv","getDateTimeNumber","dict","recordSize","namePos","getPositionNumber","valuePos","displayNamePos","displayName","displayValuePos","displayValue","mft2","numInputChannels","numOutputChannels","numGridPoints","parameters","getS15Fixed16Number","numInputEntries","numOutputEntries","inputLength","inputTables","clutLength","pow","clutTables","outputLength","outputTables","mft1","standardObserver","nCIEXYZ","getXYZNumber","measurementGeometry","measurementFlare","standardIlluminant","mluc","numRecords","records","language","country","textPos","locale","mpet","para","functionType","psid","rcs2","sf32","getBinaryString4","uf32","ui16","ui32","ui64","BigUint64Array","ui08","illuminant","surround","illuminantType","fileSignature","headers","tagCount","tagTypeWarnings","tagSignature","tagOffset","tagSize","tagType","parser","nullEnding","String","fromCharCode","UTC","getResponse16Number","code","measurement","getU1Fixed15Number","getU8Fixed8Number","recordNo","datasetNo","findDatasets","recordName","recordNameMap","record","exifHelpers","getModifyDate","ModifyDate","parseEXIFDate","SubSecTime","OffsetTime","getDateTimeOriginal","DateTimeOriginal","SubSecTimeOriginal","OffsetTimeOriginal","getDateTimeDigitized","DateTimeDigitized","SubSecTimeDigitized","OffsetTimeDigitized","getThumbnail","t","ThumbnailLength","ThumbnailOffset","Blob","getGPSTimeStamp","GPSDateStamp","GPSTimeStamp","split","parseFloat","getGPSCoords","longitude","toDegree","GPSLongitude","GPSLongitudeRef","latitude","GPSLatitude","GPSLatitudeRef","altitude","GPSAltitude","GPSAltitudeRef","accuracy","GPSHPositioningError","heading","ref","toImgDirection","GPSImgDirection","GPSImgDirectionRef","speed","toSpeed","subSec","timeOffset","join","xmpHelpers","getFileTypeByName","imageContentSniff","readJPEGFile","readPNGFile","readWEBPFile","readAVIFFile","readSVGFile","parseResult","JFIFVersion","DensityUints","Xdensity","Ydensity","Xthumbnail","Ythumbnail","ThumbnailData","parseJFIF","ThumbnailFormat","ThumbnailPalette","parseJFXX","o","parseEXIF","Orientation","assign","orientation","parseOrientation","parseXMP","parseIPTC","parseICC","supportedImageTypes","toLowerCase","isSupportedImageFile","isSupportedSidecarFile","MagicNum","JPEG","PNG","WEBP","WEBP8","BMFF4","JXL","JXL_RAW","EXIF_ALT","XMP_ALT","ICC34","input","isView","sidecarContentSniff"],"mappings":"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"}